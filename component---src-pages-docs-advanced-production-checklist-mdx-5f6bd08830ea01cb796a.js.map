{"version":3,"sources":["webpack:///./src/pages/docs/advanced-production-checklist.mdx","webpack:///./src/layouts/docs.tsx"],"names":["pageTitle","_frontmatter","makeShortcode","name","props","console","warn","Warning","Tip","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","DocsLayout","candidateMdxNodes","useStaticQuery","allMdx","nodes","index","docsIndex","prefix","pageTitleSuffix"],"mappings":"+5CAQaA,EAAY,uBACZC,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAMN,EAAc,OACpBO,EAAc,CAClBT,YACAC,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,kBACE,GAAM,uBACN,MAAS,CACP,SAAY,aAEb,iBAAGC,WAAW,KACb,KAAQ,wBACR,aAAc,iCACd,UAAa,iBACZ,mBAAKA,WAAW,IACf,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,MACR,oBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,oVAlBb,wBAoBA,YAACR,EAAD,CAASO,QAAQ,WACf,kMAGF,gIACA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,sEAA0F,kBAAIA,WAAW,KAAf,aAA1F,KACA,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,iBADI,yKASvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0BAA8C,0BAAYA,WAAW,KAAvB,wBAA9C,mFAC0B,iBAAGA,WAAW,IACpC,KAAQ,iJADc,wBAD1B,KAGuC,iBAAGA,WAAW,IACjD,KAAQ,8IAD2B,uBAHvC,QAKyC,iBAAGA,WAAW,IACnD,KAAQ,+IAD6B,uBALzC,sEAQsD,0BAAYA,WAAW,KAAvB,+BARtD,2CASmB,iBAAGA,WAAW,IAC7B,KAAQ,sIADO,sBATnB,KAYA,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,iBADI,uJAQvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8DACA,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,iBADI,whBAiBvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+BAAmD,iBAAGA,WAAW,IAC7D,KAAQ,6JADuC,4BAAnD,oIAIA,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,iBADI,+WAWvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8BAAkD,iBAAGA,WAAW,IAC5D,KAAQ,kJADsC,yBAAlD,SAE4C,iBAAGA,WAAW,IACtD,KAAQ,sCADgC,mBAF5C,MAMF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8BAAkD,iBAAGA,WAAW,IAC5D,KAAQ,uKADsC,+BAAlD,SAEkD,iBAAGA,WAAW,IAC5D,KAAQ,gCADsC,mBAFlD,OAOJ,YAACP,EAAD,CAAKM,QAAQ,OACX,8CAA6B,iBAAGC,WAAW,IACvC,KAAQ,2JADiB,yBAA7B,sEAGA,iBAAGA,WAAW,IACV,KAAQ,6EADZ,gDAHA,MAOF,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,4BACA,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,iBADI,40BA8B7BH,EAAWI,gBAAiB,G,kCCnL5B,6DA0CeC,IA/B+B,SAACb,GAAU,IAEpCc,EACfC,yBAAe,cADjBC,OAAUC,MAkBZ,OACE,kBAAC,IAAD,iBACMjB,EADN,CAEEc,kBAAmBA,EACnBI,MAAOC,EACPC,OAAO,OACPC,gBAAgB","file":"component---src-pages-docs-advanced-production-checklist-mdx-5f6bd08830ea01cb796a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/minu/IdeaProjects/upstream-armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Production checklist\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Warning = makeShortcode(\"Warning\");\nconst Tip = makeShortcode(\"Tip\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"production-checklist\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#production-checklist\",\n        \"aria-label\": \"production checklist permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Production checklist`}</h1>\n    <Warning mdxType=\"Warning\">\n      <p>{`Note that the advice on this page is not always applicable for every use case and thus should be\napplied with caution. Do not apply the changes you really do not need.`}</p>\n    </Warning>\n    <p>{`You may want to consider the following options before putting your Armeria application into production.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Specify the maximum number of accepted connections. The default is `}<em parentName=\"p\">{`unbounded`}</em>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`import com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.ServerBuilder;\n\nServerBuilder sb = Server.builder();\nsb.maxNumConnections(500);\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Specify an alternative `}<inlineCode parentName=\"p\">{`blockingTaskExecutor`}</inlineCode>{` based on expected workload if your server has\na service that uses it, such as `}<a parentName=\"p\" {...{\n            \"href\": \"type://TomcatService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/tomcat/TomcatService.html\"\n          }}>{`type://TomcatService`}</a>{`, `}<a parentName=\"p\" {...{\n            \"href\": \"type://JettyService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/jetty/JettyService.html\"\n          }}>{`type://JettyService`}</a>{` and `}<a parentName=\"p\" {...{\n            \"href\": \"type://THttpService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/thrift/THttpService.html\"\n          }}>{`type://THttpService`}</a>{` with\nsynchronous service implementation. The default is a simple `}<inlineCode parentName=\"p\">{`ScheduledThreadPoolExecutor`}</inlineCode>{` with maximum\n200 threads, provided by `}<a parentName=\"p\" {...{\n            \"href\": \"type://CommonPools:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/CommonPools.html\"\n          }}>{`type://CommonPools`}</a>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`import com.linecorp.armeria.server.ServerBuilder;\n\nServerBuilder sb = Server.builder();\nsb.blockingTaskExecutor(myScheduledExecutorService);\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Specify the default limits of an HTTP request or response.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`import java.time.Duration;\nimport com.linecorp.armeria.client.ClientBuilder;\nimport com.linecorp.armeria.server.ServerBuilder;\n\n// Server-side\nServerBuilder sb = Server.builder();\nsb.maxRequestLength(1048576); // bytes (default: 10 MiB)\nsb.requestTimeout(Duration.ofSeconds(7)); // (default: 10 seconds)\n\n// Client-side\nClientBuilder cb = Clients.builder(...); // or WebClient.builder(...)\ncb.maxResponseLength(1048576); // bytes (default: 10 MiB)\ncb.responseTimeout(Duration.ofSeconds(10)); // (default: 15 seconds)\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Decorate your services with `}<a parentName=\"p\" {...{\n            \"href\": \"type://ThrottlingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/throttling/ThrottlingService.html\"\n          }}>{`type://ThrottlingService`}</a>{` which lets you fail the incoming requests based on a\npolicy, such as 'fail if the rate of requests exceed a certain threshold.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`import com.linecorp.armeria.server.throttling.ThrottlingService;\nimport com.linecorp.armeria.server.throttling.ThrottlingStrategy;\n\nServerBuilder sb = Server.builder();\nsb.service(\"/my_service\", // Allow up to 1000 requests/sec.\n           myService.decorate(ThrottlingService.newDecorator(\n                   ThrottlingStrategy.rateLimiting(1000.0))));\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Decorate your clients with `}<a parentName=\"p\" {...{\n            \"href\": \"type://RetryingClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/retry/RetryingClient.html\"\n          }}>{`type://RetryingClient`}</a>{`. See `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/client-retry#automatic-retry\"\n          }}>{`Automatic retry`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Decorate your clients with `}<a parentName=\"p\" {...{\n            \"href\": \"type://CircuitBreakerClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/circuitbreaker/CircuitBreakerClient.html\"\n          }}>{`type://CircuitBreakerClient`}</a>{`. See `}<a parentName=\"p\" {...{\n            \"href\": \"/docs/client-circuit-breaker\"\n          }}>{`Circuit breaker`}</a>{`.`}</p>\n      </li>\n    </ul>\n    <Tip mdxType=\"Tip\">\n      <p>{`You can use Armeria's `}<a parentName=\"p\" {...{\n          \"href\": \"type://CircuitBreaker:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/circuitbreaker/CircuitBreaker.html\"\n        }}>{`type://CircuitBreaker`}</a>{` API for non-Armeria clients without circuit breaker support.\nSee `}<a parentName=\"p\" {...{\n          \"href\": \"/docs/client-circuit-breaker#using-circuitbreaker-with-non-armeria-client\"\n        }}>{`Using CircuitBreaker with non-Armeria client`}</a>{`.`}</p>\n    </Tip>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Tune the socket options.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`import com.linecorp.armeria.client.ClientBuilder;\nimport com.linecorp.armeria.client.ClientFactory;\nimport com.linecorp.armeria.client.ClientFactoryBuilder;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport io.netty.channel.ChannelOption;\n\n// Server-side\nServerBuilder sb = Server.builder();\nsb.channelOption(ChannelOption.SO_BACKLOG, ...);\nsb.channelOption(ChannelOption.SO_REUSEADDR, ...);\nsb.childChannelOption(ChannelOption.SO_SNDBUF, ...);\nsb.childChannelOption(ChannelOption.SO_RCVBUF, ...);\n\n// Client-side\nClientFactoryBuilder cfb = new ClientFactoryBuilder();\ncfb.channelOption(ChannelOption.SO_REUSEADDR, ...);\ncfb.channelOption(ChannelOption.SO_SNDBUF, ...);\ncfb.channelOption(ChannelOption.SO_RCVBUF, ...);\nClientFactory cf = cfb.build();\nClientBuilder cb = Clients.builder(...);\ncb.factory(cf);\n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n"],"sourceRoot":""}
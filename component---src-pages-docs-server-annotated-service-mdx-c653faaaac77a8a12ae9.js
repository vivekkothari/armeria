(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{"/94A":function(e){e.exports=JSON.parse('{"root":["index","setup"],"Useful links":{"Tutorials":"/tutorials","Community articles":"/community/articles","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"Server":["server-basics","server-decorator","server-grpc","server-thrift","server-docservice","server-annotated-service","server-http-file","server-servlet","server-access-log","server-cors","server-sse","server-service-registration"],"Client":["client-http","client-thrift","client-grpc","client-factory","client-decorator","client-retrofit","client-custom-http-headers","client-timeouts","client-retry","client-circuit-breaker","client-service-discovery"],"Advanced":["advanced-logging","advanced-structured-logging","advanced-custom-attributes","advanced-streaming-backpressure","advanced-structured-logging-kafka","advanced-metrics","advanced-unit-testing","advanced-production-checklist","advanced-zipkin","advanced-saml","advanced-spring-webflux-integration","advanced-dropwizard-integration","advanced-scala","advanced-scalapb","advanced-client-interoperability"]}')},xCMr:function(e,t,a){"use strict";var n=a("Wbzz"),r=a("q1tI"),o=a.n(r),i=a("/94A"),c=a("+ejy");t.a=function(e){var t=Object(n.useStaticQuery)("1217743243").allMdx.nodes;return o.a.createElement(c.a,Object.assign({},e,{candidateMdxNodes:t,index:i,prefix:"docs",pageTitleSuffix:"Armeria documentation"}))}},xVfF:function(e,t,a){"use strict";a.r(t),a.d(t,"pageTitle",(function(){return i})),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return h}));var n=a("zLVn"),r=(a("q1tI"),a("7ljp")),o=a("xCMr"),i="Annotated services",c={},l=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",t)}},s=l("Tip"),p=l("Warning"),m=l("RequiredDependencies"),b={pageTitle:i,_frontmatter:c},d=o.a;function h(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)(d,Object.assign({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"annotated-services",style:{position:"relative"}},Object(r.b)("a",{parentName:"h1",href:"#annotated-services","aria-label":"annotated services permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Annotated services"),Object(r.b)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#mapping-http-service-methods"},"Mapping HTTP service methods"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#parameter-injection"},"Parameter injection")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#injecting-a-parameter-as-an-enum-type"},"Injecting a parameter as an Enum type")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#getting-a-query-parameter"},"Getting a query parameter")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#getting-an-http-header"},"Getting an HTTP header")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#other-classes-automatically-injected"},"Other classes automatically injected")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#handling-exceptions"},"Handling exceptions"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#conversion-between-an-http-message-and-a-java-object"},"Conversion between an HTTP message and a Java object")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#converting-an-http-request-to-a-java-object"},"Converting an HTTP request to a Java object")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#injecting-value-of-parameters-and-http-headers-into-a-java-object"},"Injecting value of parameters and HTTP headers into a Java object")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#converting-a-java-object-to-an-http-response"},"Converting a Java object to an HTTP response"))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#specifying-a-blocking-task-executor"},"Specifying a blocking task executor"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#using-serverbuilder-to-configure-converters-and-exception-handlers"},"Using ServerBuilder to configure converters and exception handlers"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#returning-a-response"},"Returning a response"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#decorating-an-annotated-service"},"Decorating an annotated service")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#decorating-an-annotated-service-with-a-custom-decorator-annotation"},"Decorating an annotated service with a custom decorator annotation")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#evaluation-order-of-decorators"},"Evaluation order of decorators")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#media-type-negotiation"},"Media type negotiation")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#creating-user-defined-media-type-annotations"},"Creating user-defined media type annotations")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#specifying-additional-response-headerstrailers"},"Specifying additional response headers/trailers"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#using-a-composite-annotation"},"Using a composite annotation"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#specifying-the-service-name"},"Specifying the service name"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"#kotlin-coroutines-support"},"Kotlin coroutines support")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#coroutine-dispatcher"},"Coroutine dispatcher")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#coroutinecontextservice-decorator"},"CoroutineContextService decorator"))))),Object(r.b)(s,{mdxType:"Tip"},Object(r.b)("p",null,"Visit ",Object(r.b)("a",{parentName:"p",href:"https://github.com/line/armeria-examples"},"armeria-examples")," to find a fully working example.")),Object(r.b)("p",null,"Armeria provides a way to write an HTTP service using annotations. It helps a user make his or her code\nsimple and easy to understand. A user is able to run an HTTP service by fewer lines of code using\nannotations as follows. ",Object(r.b)("inlineCode",{parentName:"p"},"hello()")," method in the example would be mapped to the path of ",Object(r.b)("inlineCode",{parentName:"p"},"/hello/{name}"),"\nwith an HTTP ",Object(r.b)("inlineCode",{parentName:"p"},"GET")," method."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'ServerBuilder sb = Server.builder();\nsb.annotatedService(new Object() {\n    @Get("/hello/{name}")\n    public HttpResponse hello(@Param("name") String name) {\n        return HttpResponse.of(HttpStatus.OK,\n                               MediaType.PLAIN_TEXT_UTF_8,\n                               "Hello, %s!", name);\n    }\n});\n')),Object(r.b)(s,{mdxType:"Tip"},Object(r.b)("p",null,"For more information about using some well-known clients, please refer to\n",Object(r.b)("a",{parentName:"p",href:"/docs/advanced-client-interoperability#annotated-services"},"Client interoperability"),".")),Object(r.b)("h2",{id:"mapping-http-service-methods",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#mapping-http-service-methods","aria-label":"mapping http service methods permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Mapping HTTP service methods"),Object(r.b)("p",null,"To map a service method in an annotated HTTP service class to an HTTP path, it has to be annotated with one of\nHTTP method annotations. The following is the list of HTTP method annotations where each of them is mapped\nto an HTTP method."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html"},"type://@Get")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://@Head:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Head.html"},"type://@Head")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://@Post:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Post.html"},"type://@Post")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://@Put:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Put.html"},"type://@Put")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://@Delete:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Delete.html"},"type://@Delete")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://@Options:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Options.html"},"type://@Options")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://@Patch:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Patch.html"},"type://@Patch")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://@Trace:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Trace.html"},"type://@Trace"))),Object(r.b)("p",null,"To handle an HTTP request with a service method, you can annotate your service method simply as follows."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Get("/hello")\n    public HttpResponse hello() { ... }\n}\n')),Object(r.b)("p",null,"There are 5 different path types that you can define:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Exact path, e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"/hello")," or ",Object(r.b)("inlineCode",{parentName:"p"},"exact:/hello")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"a service method will handle the path exactly matched with the specified path."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Prefix path, e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"prefix:/hello")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"a service method will handle every path which starts with the specified prefix."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Path containing path variables, e.g ",Object(r.b)("inlineCode",{parentName:"p"},"/hello/{name}")," or ",Object(r.b)("inlineCode",{parentName:"p"},"/hello/:name")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"a service method will handle the path matched with the specified path pattern. A path variable in the\nspecified pattern may be mapped to a parameter of the service method."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Regular expression path, e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"regex:^/hello/(?<name>.*)$")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"a service method will handle the path matched with the specified regular expression. If a named capturing\ngroup exists in the regular expression, it may be mapped to a parameter of the service method."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Glob pattern path, e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"glob:/*/hello/**")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"a service method will handle the path matched with the specified glob pattern. Each wildcard is mapped to\nan index which starts with ",Object(r.b)("inlineCode",{parentName:"li"},"0"),", so it may be mapped to a parameter of the service method.")))),Object(r.b)("p",null,"You can get the value of a path variable, a named capturing group of the regular expression or wildcards of\nthe glob pattern in your service method by annotating a parameter with ",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," as follows.\nPlease refer to ",Object(r.b)("a",{parentName:"p",href:"#parameter-injection"},"Parameter injection")," for more information about ",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello/{name}")\n    public HttpResponse pathVar(@Param("name") String name) { ... }\n\n    @Get("regex:^/hello/(?<name>.*)$")\n    public HttpResponse regex(@Param("name") String name) { ... }\n\n    @Get("glob:/*/hello/**")\n    public HttpResponse glob(@Param("0") String prefix,\n                             @Param("1") String name) { ... }\n}\n')),Object(r.b)("p",null,"Every service method in the examples so far had a single HTTP method annotation with it. What if you want\nto map more than one HTTP method or path to your service method? You can use ",Object(r.b)("a",{parentName:"p",href:"type://@Path:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Path.html"},"type://@Path")," annotations to\nspecify multiple paths, and use the HTTP method annotations without a path to map multiple HTTP methods, e.g."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Get\n    @Post\n    @Put\n    @Delete\n    @Path("/hello")\n    @Path("/hi")\n    public HttpResponse greeting() { ... }\n}\n')),Object(r.b)("p",null,"Every service method assumes that it returns an HTTP response with ",Object(r.b)("inlineCode",{parentName:"p"},"200 OK")," or ",Object(r.b)("inlineCode",{parentName:"p"},"204 No Content")," status\naccording to its return type. If the return type is ",Object(r.b)("inlineCode",{parentName:"p"},"void")," or ",Object(r.b)("inlineCode",{parentName:"p"},"Void"),", ",Object(r.b)("inlineCode",{parentName:"p"},"204 No Content")," would be applied.\n",Object(r.b)("inlineCode",{parentName:"p"},"200 OK")," would be applied for the other types. If you want to return an alternative status code for a method,\nyou can use ",Object(r.b)("a",{parentName:"p",href:"type://@StatusCode:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/StatusCode.html"},"type://@StatusCode")," annotation as follows."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @StatusCode(201)\n    @Post("/users/{name}")\n    public User createUser(@Param("name") String name) { ... }\n\n    // @StatusCode(200) would be applied by default.\n    @Get("/users/{name}")\n    public User getUser(@Param("name") String name) { ... }\n\n    // @StatusCode(204) would be applied by default.\n    @Delete("/users/{name}")\n    public void deleteUser(@Param("name") String name) { ... }\n}\n')),Object(r.b)("p",null,"You can define a service method which handles a request only if it contains a header or parameter the method\nrequires. The following methods are bound to the same path ",Object(r.b)("inlineCode",{parentName:"p"},"/users")," but a request may be routed based on the\n",Object(r.b)("inlineCode",{parentName:"p"},"client-type")," header."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    // Handles a request which contains \'client-type: android\' header.\n    @Get("/users")\n    @MatchesHeader("client-type=android")\n    public User getUsers1() { ... }\n\n    // Handles a request which contains \'client-type\' header.\n    // Any values of the \'client-type\' header are accepted.\n    @Get("/users")\n    @MatchesHeader("client-type")\n    public User getUsers2() { ... }\n\n    // Handles a request which doesn\'t contain \'client-type\' header.\n    @Get("/users")\n    public User getUsers3() { ... }\n}\n')),Object(r.b)("h2",{id:"parameter-injection",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#parameter-injection","aria-label":"parameter injection permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Parameter injection"),Object(r.b)("p",null,"Let's see the example in the above section again."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello/{name}")\n    public HttpResponse pathvar(@Param("name") String name) { ... }\n\n    @Get("regex:^/hello/(?<name>.*)$")\n    public HttpResponse regex(@Param("name") String name) { ... }\n\n    @Get("glob:/*/hello/**")\n    public HttpResponse glob(@Param("0") String prefix,\n                             @Param("1") String name) { ... }\n}\n')),Object(r.b)("p",null,"A value of a parameter ",Object(r.b)("inlineCode",{parentName:"p"},"name")," is automatically injected as a ",Object(r.b)("inlineCode",{parentName:"p"},"String")," by Armeria.\nArmeria will try to convert the value appropriately if the parameter type is not ",Object(r.b)("inlineCode",{parentName:"p"},"String"),".\n",Object(r.b)("inlineCode",{parentName:"p"},"IllegalArgumentException")," will be raised if the conversion fails or the parameter type is not\none of the following supported types:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Primitive types and their wrapper types:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"boolean")," or ",Object(r.b)("inlineCode",{parentName:"li"},"Boolean")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"byte")," or ",Object(r.b)("inlineCode",{parentName:"li"},"Byte")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"short")," or ",Object(r.b)("inlineCode",{parentName:"li"},"Short")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"integer")," or ",Object(r.b)("inlineCode",{parentName:"li"},"Integer")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"long")," or ",Object(r.b)("inlineCode",{parentName:"li"},"Long")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"float")," or ",Object(r.b)("inlineCode",{parentName:"li"},"Float")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"double")," or ",Object(r.b)("inlineCode",{parentName:"li"},"Double")))),Object(r.b)("li",{parentName:"ul"},"Well-known JDK classes:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"String"),", ",Object(r.b)("inlineCode",{parentName:"li"},"CharSequence")," or ",Object(r.b)("inlineCode",{parentName:"li"},"AsciiString")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Enum")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"UUID")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"java.time")," package classes",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Instant")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Duration")," and  ",Object(r.b)("inlineCode",{parentName:"li"},"Period")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"LocalDate"),", ",Object(r.b)("inlineCode",{parentName:"li"},"LocalDateTime")," and ",Object(r.b)("inlineCode",{parentName:"li"},"LocalTime"),","),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"OffsetDateTime")," and ",Object(r.b)("inlineCode",{parentName:"li"},"OffsetTime")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"ZonedDateTime"),", ",Object(r.b)("inlineCode",{parentName:"li"},"ZoneId")," and ",Object(r.b)("inlineCode",{parentName:"li"},"ZoneOffset")))))),Object(r.b)("li",{parentName:"ul"},"Custom types with either of the following public static methods/constructor taking a single ",Object(r.b)("inlineCode",{parentName:"li"},"String")," parameter.\nNote that these are scanned for in the order below. The first matching method being is used,\nand if that method throws an exception, no other methods will be tried and that exception will\nbe propagated.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"public static T of(String)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"public static T valueOf(String)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"public static T fromString(String)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"public T(String)")," (constructor)")))),Object(r.b)("p",null,"Note that you can omit the value of ",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," if you compiled your code with ",Object(r.b)("inlineCode",{parentName:"p"},"-parameters")," javac\noption. In this case the variable name is used as the value."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Get("/hello/{name}")\n    public HttpResponse hello1(@Param String name) { ... }\n}\n')),Object(r.b)("p",null,"Please refer to ",Object(r.b)("a",{parentName:"p",href:"/docs/setup#configure--parameters-javac-option"},"Configure -parameters javac option"),"\nfor more information."),Object(r.b)("h3",{id:"injecting-a-parameter-as-an-enum-type",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#injecting-a-parameter-as-an-enum-type","aria-label":"injecting a parameter as an enum type permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Injecting a parameter as an ",Object(r.b)("inlineCode",{parentName:"h3"},"Enum")," type"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Enum")," type is also automatically converted if you annotate a parameter of your service method with\n",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," annotation. If your ",Object(r.b)("inlineCode",{parentName:"p"},"Enum")," type can be handled in a case-insensitive way, Armeria\nautomatically converts the string value of a parameter to a value of ",Object(r.b)("inlineCode",{parentName:"p"},"Enum")," in a case-insensitive way.\nOtherwise, case-sensitive exact match will be performed."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public enum CaseInsensitive {\n    ALPHA, BRAVO, CHARLIE\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public enum CaseSensitive {\n    ALPHA, alpha\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class MyAnnotatedService {\n\n    @Get(\"/hello1/{there}\")\n    public HttpResponse hello1(@Param(\"there\") CaseInsensitive there) {\n        // 'there' is converted in a case-insensitive way.\n    }\n\n    @Get(\"/hello2/{there}\")\n    public HttpResponse hello2(@Param(\"there\") CaseSensitive there) {\n        // 'there' must be converted in a case-sensitive way.\n        // So 'ALPHA' and 'alpha' are only acceptable.\n    }\n}\n")),Object(r.b)("h3",{id:"getting-a-query-parameter",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#getting-a-query-parameter","aria-label":"getting a query parameter permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Getting a query parameter"),Object(r.b)("p",null,"When the value of ",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," annotation is not shown in the path pattern, it will be handled as a\nparameter name of the query string of the request. If you have a service class like the example below and\na user sends an HTTP ",Object(r.b)("inlineCode",{parentName:"p"},"GET")," request with URI of ",Object(r.b)("inlineCode",{parentName:"p"},"/hello1?name=armeria"),", the service method will get ",Object(r.b)("inlineCode",{parentName:"p"},"armeria"),"\nas the value of parameter ",Object(r.b)("inlineCode",{parentName:"p"},"name"),"."),Object(r.b)("p",null,"If there is no parameter named ",Object(r.b)("inlineCode",{parentName:"p"},"name")," in the query string, the service method that requires it will not be\ninvoked, but the client will get a ",Object(r.b)("inlineCode",{parentName:"p"},"400 Bad Request")," response.  If you want to allow ",Object(r.b)("inlineCode",{parentName:"p"},"null")," to be injected,\nyou can use ",Object(r.b)("a",{parentName:"p",href:"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html"},"type://@Default")," annotation, ",Object(r.b)("inlineCode",{parentName:"p"},"@Nullable")," annotation or ",Object(r.b)("inlineCode",{parentName:"p"},"Optional<?>")," class, like demonstrated\nbelow in ",Object(r.b)("inlineCode",{parentName:"p"},"hello2()"),", ",Object(r.b)("inlineCode",{parentName:"p"},"hello3()")," and ",Object(r.b)("inlineCode",{parentName:"p"},"hello4()")," methods:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello1")\n    // Will not be invoked but return a 400 status when \'name\' parameter is missing.\n    public HttpResponse hello1(@Param("name") String name) { ... }\n\n    @Get("/hello2")\n    public HttpResponse hello2(@Param("name") @Default("armeria") String name) { ... }\n\n    @Get("/hello3")\n    public HttpResponse hello3(@Param("name") @Nullable String name) {\n        String clientName = name != null ? name : "armeria";\n        // ...\n    }\n\n    @Get("/hello4")\n    public HttpResponse hello4(@Param("name") Optional<String> name) {\n        String clientName = name.orElse("armeria");\n        // ...\n    }\n}\n')),Object(r.b)(s,{mdxType:"Tip"},Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"@Nullable")," annotation can be from ",Object(r.b)("em",{parentName:"p"},"any")," package as long as its simple name is ",Object(r.b)("inlineCode",{parentName:"p"},"Nullable"),".\nFor example, it can be ",Object(r.b)("inlineCode",{parentName:"p"},"@javax.annotation.Nullable"),", ",Object(r.b)("inlineCode",{parentName:"p"},"@org.checkerframework.checker.nullness.qual.Nullable")," or\n",Object(r.b)("inlineCode",{parentName:"p"},"@io.reactivex.annotations.Nullable"),".")),Object(r.b)("p",null,"If multiple parameters exist with the same name in a query string, they can be injected as a ",Object(r.b)("inlineCode",{parentName:"p"},"List<?>"),"\nor ",Object(r.b)("inlineCode",{parentName:"p"},"Set<?>"),", e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"/hello1?number=1&number=2&number=3"),". You can use ",Object(r.b)("a",{parentName:"p",href:"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html"},"type://@Default")," annotation\nor ",Object(r.b)("inlineCode",{parentName:"p"},"Optional<?>")," class here, too."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Get("/hello1")\n    public HttpResponse hello1(@Param("number") List<Integer> numbers) { ... }\n\n    // If there is no \'number\' parameter, the default value "1" will be converted to\n    // Integer 1, then it will be added to the \'numbers\' list.\n    @Get("/hello2")\n    public HttpResponse hello2(@Param("number") @Default("1")\n                               List<Integer> numbers) { ... }\n\n    @Get("/hello3")\n    public HttpResponse hello3(@Param("number")\n                               Optional<List<Integer>> numbers) { ... }\n}\n')),Object(r.b)("p",null,"If an HTTP ",Object(r.b)("inlineCode",{parentName:"p"},"POST")," request with a ",Object(r.b)("inlineCode",{parentName:"p"},"Content-Type: x-www-form-urlencoded")," header is received and\nno ",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," value appears in the path pattern, Armeria will aggregate the received request and\ndecode its body as a URL-encoded form. After that, Armeria will inject the decoded value into the parameter."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class MyAnnotatedService {\n    @Post(\"/hello4\")\n    public HttpResponse hello4(@Param(\"name\") String name) {\n        // 'x-www-form-urlencoded' request will be aggregated.\n        // The other requests may get a '400 Bad Request' because\n        // there is no way to inject a mandatory parameter 'name'.\n    }\n}\n")),Object(r.b)("h3",{id:"getting-an-http-header",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#getting-an-http-header","aria-label":"getting an http header permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Getting an HTTP header"),Object(r.b)("p",null,"Armeria also provides ",Object(r.b)("a",{parentName:"p",href:"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html"},"type://@Header")," annotation to inject an HTTP header value into a parameter.\nThe parameter annotated with ",Object(r.b)("a",{parentName:"p",href:"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html"},"type://@Header")," can also be specified as one of the built-in types as follows.\n",Object(r.b)("a",{parentName:"p",href:"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html"},"type://@Default")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Optional<?>")," are also supported. ",Object(r.b)("a",{parentName:"p",href:"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html"},"type://@Header")," annotation also supports\n",Object(r.b)("inlineCode",{parentName:"p"},"List<?>")," or ",Object(r.b)("inlineCode",{parentName:"p"},"Set<?>")," because HTTP headers can be added several times with the same name."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello1")\n    public HttpResponse hello1(@Header("Authorization") String auth) { ... }\n\n    @Post("/hello2")\n    public HttpResponse hello2(@Header("Content-Length") long contentLength) { ... }\n\n    @Post("/hello3")\n    public HttpResponse hello3(@Header("Forwarded") List<String> forwarded) { ... }\n\n    @Post("/hello4")\n    public HttpResponse hello4(@Header("Forwarded")\n                               Optional<Set<String>> forwarded) { ... }\n}\n')),Object(r.b)("p",null,"Note that you can omit the value of ",Object(r.b)("a",{parentName:"p",href:"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html"},"type://@Header")," if you compiled your code with ",Object(r.b)("inlineCode",{parentName:"p"},"-parameters")," javac\noption. Read ",Object(r.b)("a",{parentName:"p",href:"#parameter-injection"},"Parameter injection")," for more information.\nIn this case, the variable name is used as the value, but it will be converted to hyphen-separated lowercase\nstring to be suitable for general HTTP header names. e.g. a variable name ",Object(r.b)("inlineCode",{parentName:"p"},"contentLength")," or\n",Object(r.b)("inlineCode",{parentName:"p"},"content_length")," will be converted to ",Object(r.b)("inlineCode",{parentName:"p"},"content-length")," as the value of ",Object(r.b)("a",{parentName:"p",href:"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html"},"type://@Header"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Post("/hello2")\n    public HttpResponse hello2(@Header long contentLength) { ... }\n}\n')),Object(r.b)("h3",{id:"other-classes-automatically-injected",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#other-classes-automatically-injected","aria-label":"other classes automatically injected permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Other classes automatically injected"),Object(r.b)("p",null,"The following classes are automatically injected when you specify them on the parameter list of your method."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://ServiceRequestContext:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html"},"type://ServiceRequestContext")," (or ",Object(r.b)("a",{parentName:"li",href:"type://RequestContext:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/RequestContext.html"},"type://RequestContext"),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://RequestHeaders:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/RequestHeaders.html"},"type://RequestHeaders")," (or ",Object(r.b)("a",{parentName:"li",href:"type://HttpHeaders:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpHeaders.html"},"type://HttpHeaders"),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://HttpRequest:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpRequest.html"},"type://HttpRequest")," (or ",Object(r.b)("a",{parentName:"li",href:"type://Request:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/Request.html"},"type://Request"),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://AggregatedHttpRequest:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/AggregatedHttpRequest.html"},"type://AggregatedHttpRequest")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://QueryParams:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/QueryParams.html"},"type://QueryParams")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"type://Cookies:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/Cookies.html"},"type://Cookies"))),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello1")\n    public HttpResponse hello1(ServiceRequestContext ctx, HttpRequest req) {\n        // Use the context and request inside a method.\n    }\n\n    @Post("/hello2")\n    public HttpResponse hello2(AggregatedHttpRequest aggregatedRequest) {\n        // Armeria aggregates the received HttpRequest and\n        // calls this method with the aggregated request.\n    }\n\n    @Get("/hello3")\n    public HttpResponse hello3(QueryParams params) {\n        // \'params\' holds the parameters parsed from a query string of a request.\n    }\n\n    @Post("/hello4")\n    public HttpResponse hello4(QueryParams params) {\n        // If a request has a url-encoded form as its body,\n        // it can be accessed via \'params\'.\n    }\n\n    @Post("/hello5")\n    public HttpResponse hello5(Cookies cookies) {\n        // If \'Cookie\' header exists, it will be injected into\n        // the specified \'cookies\' parameter.\n    }\n}\n')),Object(r.b)("h2",{id:"handling-exceptions",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#handling-exceptions","aria-label":"handling exceptions permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Handling exceptions"),Object(r.b)("p",null,"It is often useful to extract exception handling logic from service methods into a separate common class.\nArmeria provides ",Object(r.b)("a",{parentName:"p",href:"type://@ExceptionHandler:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ExceptionHandler.html"},"type://@ExceptionHandler")," annotation to transform an exception into a response.\nYou can write your own exception handler by implementing ",Object(r.b)("a",{parentName:"p",href:"type://ExceptionHandlerFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ExceptionHandlerFunction.html"},"type://ExceptionHandlerFunction")," interface and\nannotate your service object or method with ",Object(r.b)("a",{parentName:"p",href:"type://@ExceptionHandler:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ExceptionHandler.html"},"type://@ExceptionHandler")," annotation. Here is an example of\nan exception handler. If your exception handler is not able to handle a given exception, you can call\n",Object(r.b)("a",{parentName:"p",href:"type://ExceptionHandlerFunction#fallthrough():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ExceptionHandlerFunction.html#fallthrough()"},"type://ExceptionHandlerFunction#fallthrough()")," to pass the exception to the next exception handler."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class MyExceptionHandler implements ExceptionHandlerFunction {\n    @Override\n    public HttpResponse handleException(ServiceRequestContext ctx,\n                                        HttpRequest req, Throwable cause) {\n        if (cause instanceof MyServiceException) {\n            return HttpResponse.of(HttpStatus.CONFLICT);\n        }\n\n        // To the next exception handler.\n        return ExceptionHandlerFunction.fallthrough();\n    }\n}\n")),Object(r.b)("p",null,"You can annotate at class level to catch an exception from every method in your service class."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@ExceptionHandler(MyExceptionHandler.class)\npublic class MyAnnotatedService {\n    @Get("/hello")\n    public HttpResponse hello() { ... }\n}\n')),Object(r.b)("p",null,"You can also annotate at method level to catch an exception from a single method in your service class."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Get("/hello")\n    @ExceptionHandler(MyExceptionHandler.class)\n    public HttpResponse hello() { ... }\n}\n')),Object(r.b)("p",null,"If there is no exception handler which is able to handle an exception, the exception would be passed to\nthe default exception handler. It handles ",Object(r.b)("inlineCode",{parentName:"p"},"IllegalArgumentException"),", ",Object(r.b)("a",{parentName:"p",href:"type://HttpStatusException:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/HttpStatusException.html"},"type://HttpStatusException")," and\n",Object(r.b)("a",{parentName:"p",href:"type://HttpResponseException:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/HttpResponseException.html"},"type://HttpResponseException")," by default. ",Object(r.b)("inlineCode",{parentName:"p"},"IllegalArgumentException")," would be converted into\n",Object(r.b)("inlineCode",{parentName:"p"},"400 Bad Request")," response, and the other two exceptions would be converted into a response with\nthe status code which they are holding. For another exceptions, ",Object(r.b)("inlineCode",{parentName:"p"},"500 Internal Server Error")," would be\nsent to the client."),Object(r.b)("h2",{id:"conversion-between-an-http-message-and-a-java-object",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#conversion-between-an-http-message-and-a-java-object","aria-label":"conversion between an http message and a java object permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Conversion between an HTTP message and a Java object"),Object(r.b)("h3",{id:"converting-an-http-request-to-a-java-object",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#converting-an-http-request-to-a-java-object","aria-label":"converting an http request to a java object permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Converting an HTTP request to a Java object"),Object(r.b)("p",null,"In some cases like receiving a JSON document from a client, it may be useful to convert the document to\na Java object automatically. Armeria provides ",Object(r.b)("a",{parentName:"p",href:"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html"},"type://@RequestConverter")," and ",Object(r.b)("a",{parentName:"p",href:"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html"},"type://@RequestObject"),"\nannotations so that such conversion can be done conveniently.\nYou can write your own request converter by implementing ",Object(r.b)("a",{parentName:"p",href:"type://RequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html"},"type://RequestConverterFunction")," as follows.\nSimilar to the exception handler, you can call ",Object(r.b)("a",{parentName:"p",href:"type://RequestConverterFunction#fallthrough():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html#fallthrough()"},"type://RequestConverterFunction#fallthrough()")," when your request\nconverter is not able to convert the request."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class ToEnglishConverter implements RequestConverterFunction {\n    @Override\n    public Object convertRequest(ServiceRequestContext ctx,\n                                 AggregatedHttpRequest request,\n                                 Class<?> expectedResultType) {\n        if (expectedResultType == Greeting.class) {\n            // Convert the request to a Java object.\n            return new Greeting(translateToEnglish(request.contentUtf8()));\n        }\n\n        // To the next request converter.\n        return RequestConverterFunction.fallthrough();\n    }\n\n    private String translateToEnglish(String greetingInAnyLanguage) { ... }\n}\n")),Object(r.b)("p",null,"Then, you can write your service method as follows. Custom request objects will be converted automatically\nby the converters you registered with ",Object(r.b)("a",{parentName:"p",href:"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html"},"type://@RequestConverter")," annotation.\nNote that ",Object(r.b)("a",{parentName:"p",href:"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html"},"type://@RequestConverter")," annotation can be specified on a class, a method or a parameter\nin an annotated service, and its scope is determined depending on where it is specified."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@RequestConverter(ToEnglishConverter.class)\npublic class MyAnnotatedService {\n\n    @Post("/hello")\n    public HttpResponse hello(Greeting greeting) {\n        // ToEnglishConverter will be used to convert a request.\n        // ...\n    }\n\n    @Post("/hola")\n    @RequestConverter(ToSpanishConverter.class)\n    public HttpResponse hola(Greeting greeting) {\n        // ToSpanishConverter will be tried to convert a request first.\n        // ToEnglishConverter will be used if ToSpanishConverter fell through.\n        // ...\n    }\n\n    @Post("/greet")\n    public HttpResponse greet(@RequestConverter(ToGermanConverter.class)\n                              Greeting greetingInGerman,\n                              Greeting greetingInEnglish) {\n        // For the 1st parameter \'greetingInGerman\':\n        // ToGermanConverter will be tried to convert a request first.\n        // ToEnglishConverter will be used if ToGermanConverter fell through.\n        //\n        // For the 2nd parameter \'greetingInEnglish\':\n        // ToEnglishConverter will be used to convert a request.\n        // ...\n    }\n}\n')),Object(r.b)("p",null,"Armeria also provides built-in request converters such as, a request converter for a Java Bean,\n",Object(r.b)("a",{parentName:"p",href:"type://JacksonRequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/JacksonRequestConverterFunction.html"},"type://JacksonRequestConverterFunction")," for a JSON document, ",Object(r.b)("a",{parentName:"p",href:"type://StringRequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/StringRequestConverterFunction.html"},"type://StringRequestConverterFunction"),"\nfor a string and ",Object(r.b)("a",{parentName:"p",href:"type://ByteArrayRequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ByteArrayRequestConverterFunction.html"},"type://ByteArrayRequestConverterFunction")," for binary data. They will be applied\nafter your request converters, so you don't have to specify any ",Object(r.b)("a",{parentName:"p",href:"type://@RequestConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverter.html"},"type://@RequestConverter")," annotations:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    // JacksonRequestConverterFunction will work for the content type of\n    // \'application/json\' or one of \'+json\' types.\n    @Post("/hello1")\n    public HttpResponse hello1(JsonNode body) { ... }\n\n    @Post("/hello2")\n    public HttpResponse hello2(MyJsonRequest body) { ... }\n\n    // StringRequestConverterFunction will work regardless of the content type.\n    @Post("/hello3")\n    public HttpResponse hello3(String body) { ... }\n\n    @Post("/hello4")\n    public HttpResponse hello4(CharSequence body) { ... }\n\n    // ByteArrayRequestConverterFunction will work regardless of the content type.\n    @Post("/hello5")\n    public HttpResponse hello5(byte[] body) { ... }\n\n    @Post("/hello6")\n    public HttpResponse hello6(HttpData body) { ... }\n}\n')),Object(r.b)("h4",{id:"injecting-value-of-parameters-and-http-headers-into-a-java-object",style:{position:"relative"}},Object(r.b)("a",{parentName:"h4",href:"#injecting-value-of-parameters-and-http-headers-into-a-java-object","aria-label":"injecting value of parameters and http headers into a java object permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Injecting value of parameters and HTTP headers into a Java object"),Object(r.b)("p",null,"Armeria provides a generic built-in request converter that converts a request into a Java object.\nJust define a plain old Java class and specify it as a parameter of your service method."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Post("/hello")\n    public HttpResponse hello(MyRequestObject myRequestObject) { ... }\n}\n')),Object(r.b)("p",null,"We also need to define the ",Object(r.b)("inlineCode",{parentName:"p"},"MyRequestObject")," class which was used in the method ",Object(r.b)("inlineCode",{parentName:"p"},"hello()")," above.\nTo tell Armeria which constructor parameter, setter method or field has to be injected with what value,\nwe should put ",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param"),", ",Object(r.b)("a",{parentName:"p",href:"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html"},"type://@Header"),", ",Object(r.b)("a",{parentName:"p",href:"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html"},"type://@RequestObject")," annotations on any of the following elements:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Fields"),Object(r.b)("li",{parentName:"ul"},"Constructors with only one parameter"),Object(r.b)("li",{parentName:"ul"},"Methods with only one parameter"),Object(r.b)("li",{parentName:"ul"},"Constructor parameters"),Object(r.b)("li",{parentName:"ul"},"Method parameters")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyRequestObject {\n    @Param("name") // This field will be injected by the value of parameter "name".\n    private String name;\n\n    @Header("age") // This field will be injected by the value of HTTP header "age".\n    private int age;\n\n    @RequestObject // This field will be injected by another request converter.\n    private MyAnotherRequestObject obj;\n\n    // You can omit the value of @Param or @Header if you compiled your code with\n    // `-parameters` javac option.\n    @Param // This field will be injected by the value of parameter "gender".\n    private String gender;\n\n    @Header // This field will be injected by the value of "accept-language" header.\n    private String acceptLanguage;\n\n    @Param("address") // You can annotate a single-parameter method\n                      // with @Param or @Header.\n    public void setAddress(String address) { ... }\n\n    @Header("id") // You can annotate a single-parameter constructor\n    @Default("0") // with @Param or @Header.\n    public MyRequestObject(long id) { ... }\n\n    // You can annotate all parameters of method or constructor with @Param or @Header.\n    public void init(@Header("permissions") String permissions,\n                     @Param("client-id") @Default("0") int clientId)\n}\n')),Object(r.b)("p",null,"The usage of ",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," or ",Object(r.b)("a",{parentName:"p",href:"type://@Header:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Header.html"},"type://@Header")," annotations on Java object elements is much like\nusing them on the parameters of a service method because even you can use ",Object(r.b)("a",{parentName:"p",href:"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html"},"type://@Default")," and\n",Object(r.b)("a",{parentName:"p",href:"type://@RequestObject:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestObject.html"},"type://@RequestObject")," annotations defined there.\nPlease refer to ",Object(r.b)("a",{parentName:"p",href:"#parameter-injection"},"Parameter injection"),", and\n",Object(r.b)("a",{parentName:"p",href:"#getting-an-http-header"},"Getting an HTTP header")," for more information."),Object(r.b)("h3",{id:"converting-a-java-object-to-an-http-response",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#converting-a-java-object-to-an-http-response","aria-label":"converting a java object to an http response permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Converting a Java object to an HTTP response"),Object(r.b)("p",null,"Every object returned by an annotated service method can be converted to an HTTP response message by\nresponse converters, except for ",Object(r.b)("a",{parentName:"p",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse")," and ",Object(r.b)("a",{parentName:"p",href:"type://AggregatedHttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/AggregatedHttpResponse.html"},"type://AggregatedHttpResponse")," which are already\nin a form of response message. You can also write your own response converter by implementing\n",Object(r.b)("a",{parentName:"p",href:"type://ResponseConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ResponseConverterFunction.html"},"type://ResponseConverterFunction")," as follows. Also similar to ",Object(r.b)("a",{parentName:"p",href:"type://RequestConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/RequestConverterFunction.html"},"type://RequestConverterFunction"),",\nyou can call ",Object(r.b)("inlineCode",{parentName:"p"},"ResponseConverterFunction.fallthrough()")," when your response converter is not able to\nconvert the result to an ",Object(r.b)("a",{parentName:"p",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyResponseConverter implements ResponseConverterFunction {\n    @Override\n    HttpResponse convertResponse(ServiceRequestContext ctx,\n                                 ResponseHeaders headers,\n                                 @Nullable Object result,\n                                 HttpHeaders trailers) throws Exception {\n        if (result instanceof MyObject) {\n            return HttpResponse.of(HttpStatus.OK,\n                                   MediaType.PLAIN_TEXT_UTF_8,\n                                   "Hello, %s!", ((MyObject) result).processedName(),\n                                   trailers);\n        }\n\n        // To the next response converter.\n        return ResponseConverterFunction.fallthrough();\n    }\n}\n')),Object(r.b)("p",null,"You can annotate your service method and class as follows."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@ResponseConverter(MyResponseConverter.class)\npublic class MyAnnotatedService {\n\n    @Post("/hello")\n    public MyObject hello() {\n        // MyResponseConverter will be used to make a response.\n        // ...\n    }\n\n    @Post("/hola")\n    @ResponseConverter(MySpanishResponseConverter.class)\n    public MyObject hola() {\n        // MySpanishResponseConverter will be tried to convert MyObject\n        // to a response first, and then MyResponseConverter will be used\n        // if MySpanishResponseConverter fell through.\n        // ...\n    }\n}\n')),Object(r.b)("p",null,"Armeria supports ",Object(r.b)("a",{parentName:"p",href:"#media-type-negotiation"},"Media type negotiation"),". So you may want to get\na negotiated media type in order to set a ",Object(r.b)("inlineCode",{parentName:"p"},"Content-Type")," header on your response.\nIn this case, you can access it in your response converter as follows."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class MyResponseConverter implements ResponseConverterFunction {\n    @Override\n    HttpResponse convertResponse(ServiceRequestContext ctx,\n                                 ResponseHeaders headers,\n                                 @Nullable Object result,\n                                 HttpHeaders trailers) throws Exception {\n        MediaType mediaType = ctx.negotiatedResponseMediaType();\n        if (mediaType != null) {\n            // Do something based on the media type.\n            // ...\n        }\n    }\n}\n")),Object(r.b)("p",null,"Even if you do not specify any ",Object(r.b)("a",{parentName:"p",href:"type://@ResponseConverter:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ResponseConverter.html"},"type://@ResponseConverter")," annotation, the response object can be converted into\nan ",Object(r.b)("a",{parentName:"p",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse")," by one of the following response converters which performs the conversion based on\nthe negotiated media type and the type of the object."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"type://JacksonResponseConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/JacksonResponseConverterFunction.html"},"type://JacksonResponseConverterFunction")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"converts an object to a JSON document if the negotiated media type is ",Object(r.b)("inlineCode",{parentName:"li"},"application/json"),".\n",Object(r.b)("inlineCode",{parentName:"li"},"JsonNode")," object can be converted to a JSON document even if there is no media type negotiated."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"type://StringResponseConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/StringResponseConverterFunction.html"},"type://StringResponseConverterFunction")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"converts an object to a string if the negotiated main media type is one of ",Object(r.b)("inlineCode",{parentName:"li"},"text")," types.\nIf there is no media type negotiated, ",Object(r.b)("inlineCode",{parentName:"li"},"String")," and ",Object(r.b)("inlineCode",{parentName:"li"},"CharSequence")," object will be written as a text\nwith ",Object(r.b)("inlineCode",{parentName:"li"},"Content-Type: text/plain; charset=utf-8")," header."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"type://ByteArrayResponseConverterFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ByteArrayResponseConverterFunction.html"},"type://ByteArrayResponseConverterFunction")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"converts an object to a byte array. Only ",Object(r.b)("a",{parentName:"li",href:"type://HttpData:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpData.html"},"type://HttpData")," and ",Object(r.b)("inlineCode",{parentName:"li"},"byte[]")," will be handled\neven if the negotiated media type is ",Object(r.b)("inlineCode",{parentName:"li"},"application/binary")," or ",Object(r.b)("inlineCode",{parentName:"li"},"application/octet-stream"),".\nIf there is no media type negotiated, ",Object(r.b)("a",{parentName:"li",href:"type://HttpData:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpData.html"},"type://HttpData")," and ",Object(r.b)("inlineCode",{parentName:"li"},"byte[]")," object will be written as a binary\nwith ",Object(r.b)("inlineCode",{parentName:"li"},"Content-Type: application/binary")," header.")))),Object(r.b)("p",null,"Let's see the following example about the default response conversion."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    // JacksonResponseConverterFunction will convert the return values\n    // to JSON documents:\n    @Get("/json1")\n    @ProducesJson    // the same as @Produces("application/json; charset=utf-8")\n    public MyObject json1() { ... }\n\n    @Get("/json2")\n    public JsonNode json2() { ... }\n\n    // StringResponseConverterFunction will convert the return values to strings:\n    @Get("/string1")\n    @ProducesText    // the same as @Produces("text/plain; charset=utf-8")\n    public int string1() { ... }\n\n    @Get("/string2")\n    public CharSequence string2() { ... }\n\n    // ByteArrayResponseConverterFunction will convert the return values\n    // to byte arrays:\n    @Get("/byte1")\n    @ProducesBinary  // the same as @Produces("application/binary")\n    public HttpData byte1() { ... }\n\n    @Get("/byte2")\n    public byte[] byte2() { ... }\n}\n')),Object(r.b)("h2",{id:"specifying-a-blocking-task-executor",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#specifying-a-blocking-task-executor","aria-label":"specifying a blocking task executor permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Specifying a blocking task executor"),Object(r.b)("p",null,"An annotated service is executed by an ",Object(r.b)("a",{parentName:"p",href:"https://netty.io/4.1/api/io/netty/channel/EventLoop.html"},"EventLoop"),",\nso you must not make a blocking call within the ",Object(r.b)("inlineCode",{parentName:"p"},"EventLoop"),". If you want to make a blocking call,\nyou should delegate the call to another thread. You can use your own thread or a blocking task executor that\nArmeria provides."),Object(r.b)("p",null,"If you specify the ",Object(r.b)("a",{parentName:"p",href:"type://@Blocking:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Blocking.html"},"type://@Blocking")," annotation to the method, the method will be executed by\nthe blocking task executor that is returned by ",Object(r.b)("a",{parentName:"p",href:"type://ServiceRequestContext#blockingTaskExecutor():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html#blockingTaskExecutor()"},"type://ServiceRequestContext#blockingTaskExecutor()"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Blocking // 👈\n    @Get("/hello")\n    public HttpResponse hello(ServiceRequestContext ctx) {\n        // ctx.blockingTaskExecutor() executes this method.\n        assert !ctx.eventLoop().inEventLoop();\n\n        try {\n            Statement stmt = ...;\n            // Make a blocking call.\n            ResultSet resultSet = stmt.executeQuery(...);\n            return responseFrom(resultSet);\n        } catch (Throwable t) {\n            return HttpResponse.of(HttpStatus.INTERNAL_SERVER_ERROR);\n        }\n    }\n')),Object(r.b)(s,{mdxType:"Tip"},Object(r.b)("p",null,"You can apply the ",Object(r.b)("a",{parentName:"p",href:"type://@Blocking:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Blocking.html"},"type://@Blocking")," annotation at the class level so all methods are executed by the\nblocking task executor:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@Blocking // 👈\npublic class MyBlockingAnnotatedService {\n    @Get("/hello")\n    public HttpResponse hello(ServiceRequestContext ctx) {\n        // ctx.blockingTaskExecutor() executes this method.\n        ...\n    }\n    @Get("/hello2")\n    public HttpResponse hello2(ServiceRequestContext ctx) {\n        // ctx.blockingTaskExecutor() executes this method.\n        ...\n    }\n}\n'))),Object(r.b)("p",null,"You can also submit a task to the ",Object(r.b)("a",{parentName:"p",href:"type://ServiceRequestContext#blockingTaskExecutor():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html#blockingTaskExecutor()"},"type://ServiceRequestContext#blockingTaskExecutor()")," or any ",Object(r.b)("inlineCode",{parentName:"p"},"Executor"),"\ninstead of using the ",Object(r.b)("a",{parentName:"p",href:"type://@Blocking:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Blocking.html"},"type://@Blocking")," annotation:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello")\n    public HttpResponse hello(ServiceRequestContext ctx) {\n        // The current thread is an event loop.\n        assert ctx.eventLoop().inEventLoop();\n\n        CompletableFuture<HttpResponse> future = new CompletableFuture<>();\n        // Delegate a blocking call to the blocking task executor.\n        ctx.blockingTaskExecutor().execute(() -> { // 👈\n            try {\n                Statement stmt = ...;\n                // Make a blocking call.\n                ResultSet resultSet = stmt.executeQuery(...);\n                HttpResponse res = responseFrom(resultSet);\n                future.complete(res);\n            } catch (Throwable t) {\n                future.complete(HttpResponse.of(HttpStatus.INTERNAL_SERVER_ERROR));\n            }\n        });\n        return HttpResponse.from(future);\n    }\n')),Object(r.b)("h2",{id:"using-serverbuilder-to-configure-converters-and-exception-handlers",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#using-serverbuilder-to-configure-converters-and-exception-handlers","aria-label":"using serverbuilder to configure converters and exception handlers permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Using ",Object(r.b)("inlineCode",{parentName:"h2"},"ServerBuilder")," to configure converters and exception handlers"),Object(r.b)("p",null,"You can specify converters and exception handlers using ",Object(r.b)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder"),", without using the annotations\nexplained in the previous sections:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"sb.annotatedService(new MyAnnotatedService(),\n                    // Exception handlers\n                    new MyExceptionHandler(),\n                    // Converters\n                    new MyRequestConverter(), new MyResponseConverter());\n")),Object(r.b)("p",null,"Also, they have a different method signature for conversion and exception handling so you can even write them\nin a single class and add it to your ",Object(r.b)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder")," at once, e.g."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class MyAllInOneHandler implements RequestConverterFunction,\n                                          ResponseConverterFunction,\n                                          ExceptionHandlerFunction {\n    @Override\n    public Object convertRequest(ServiceRequestContext ctx,\n                                 AggregatedHttpRequest request,\n                                 Class<?> expectedResultType) { ... }\n\n    @Override\n    HttpResponse convertResponse(ServiceRequestContext ctx,\n                                 ResponseHeaders headers,\n                                 @Nullable Object result,\n                                 HttpHeaders trailers) throws Exception { ... }\n\n    @Override\n    public HttpResponse handleException(ServiceRequestContext ctx,\n                                        HttpRequest req, Throwable cause) { ... }\n}\n\n// ...\n\nsb.annotatedService(new MyAnnotatedService(), new MyAllInOneHandler());\n")),Object(r.b)("p",null,"When you specify exception handlers in a mixed manner like below, they will be evaluated in the following\norder commented. It is also the same as the evaluation order of the converters."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@ExceptionHandler(MyClassExceptionHandler3.class)           // order 3\n@ExceptionHandler(MyClassExceptionHandler4.class)           // order 4\npublic class MyAnnotatedService {\n    @Get("/hello")\n    @ExceptionHandler(MyMethodExceptionHandler1.class)      // order 1\n    @ExceptionHandler(MyMethodExceptionHandler2.class)      // order 2\n    public HttpResponse hello() { ... }\n}\n\n// ...\n\nsb.annotatedService(new MyAnnotatedService(),\n                    new MyGlobalExceptionHandler5(),        // order 5\n                    new MyGlobalExceptionHandler6());       // order 6\n')),Object(r.b)("h2",{id:"returning-a-response",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#returning-a-response","aria-label":"returning a response permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Returning a response"),Object(r.b)("p",null,"In the earlier examples, the annotated service methods only return ",Object(r.b)("a",{parentName:"p",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse"),", however there are\nmore response types which can be used in the annotated service."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse")," and ",Object(r.b)("a",{parentName:"p",href:"type://AggregatedHttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/AggregatedHttpResponse.html"},"type://AggregatedHttpResponse")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"It will be sent to the client without any modification. If an exception is raised while the response is\nbeing sent, exception handlers will handle it. If no message has been sent to the client yet,\nthe exception handler can send an ",Object(r.b)("a",{parentName:"li",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse")," instead."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"type://HttpResult:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/HttpResult.html"},"type://HttpResult")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"It contains the ",Object(r.b)("a",{parentName:"li",href:"type://HttpHeaders:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpHeaders.html"},"type://HttpHeaders")," and the object which can be converted into HTTP response body by\nresponse converters. A user can customize the HTTP status and headers including the trailers, with this type.")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Get("/users")\n    public HttpResult<List<User>> getUsers(@Param int start) {\n        List<User> users = ...;\n        ResponseHeaders headers = ResponseHeaders.builder()\n            .status(HttpStatus.OK)\n            .add(HttpHeaderNames.LINK,\n                 String.format("<https://example.com/users?from=%s>; rel=\\"next\\"",\n                               start + 10))\n            .build();\n        return HttpResult.of(headers, users);\n    }\n}\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Reactive Streams ",Object(r.b)("a",{parentName:"p",href:"https://www.reactive-streams.org/reactive-streams-1.0.2-javadoc/org/reactivestreams/Publisher.html"},"Publisher")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"All objects which are produced by the publisher will be collected, then the collected ones will be\nconverted to an ",Object(r.b)("a",{parentName:"li",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse")," by response converters. If a single object is produced, it will be\npassed into the response converters as it is. But if multiple objects are produced, they will be passed\ninto the response converters as a list. If the producer produces an error, exception handlers will handle it.\nNote that RxJava ",Object(r.b)("a",{parentName:"li",href:"http://reactivex.io/RxJava/javadoc/io/reactivex/ObservableSource.html"},"ObservableSource"),"\nwill be treated in the same way as ",Object(r.b)("a",{parentName:"li",href:"https://www.reactive-streams.org/reactive-streams-1.0.2-javadoc/org/reactivestreams/Publisher.html"},"Publisher")," if you add ",Object(r.b)("inlineCode",{parentName:"li"},"armeria-rxjava")," to the dependencies."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"CompletionStage")," and ",Object(r.b)("inlineCode",{parentName:"p"},"CompletableFuture")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"An object which is generated by the ",Object(r.b)("inlineCode",{parentName:"li"},"CompletionStage")," will be converted to an ",Object(r.b)("a",{parentName:"li",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse"),"\nby response converters. If the ",Object(r.b)("inlineCode",{parentName:"li"},"CompletionStage")," completes exceptionally, exception handlers will\nhandle the cause."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Other types"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"As described in\n",Object(r.b)("a",{parentName:"li",href:"#converting-a-java-object-to-an-http-response"},"Converting a Java object to an HTTP response"),",\nyou can use any response types with response converters that convert them.\nIf a service method raises an exception, exception handlers will handle it.")))),Object(r.b)("h2",{id:"decorating-an-annotated-service",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#decorating-an-annotated-service","aria-label":"decorating an annotated service permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Decorating an annotated service"),Object(r.b)("p",null,"Every ",Object(r.b)("a",{parentName:"p",href:"type://HttpService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/HttpService.html"},"type://HttpService")," can be wrapped by another ",Object(r.b)("a",{parentName:"p",href:"type://HttpService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/HttpService.html"},"type://HttpService")," in Armeria (Refer to\n",Object(r.b)("a",{parentName:"p",href:"/docs/server-decorator"},"Decorating a service")," for more information).\nSimply, you can write your own decorator by\nimplementing ",Object(r.b)("a",{parentName:"p",href:"type://DecoratingHttpServiceFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/DecoratingHttpServiceFunction.html"},"type://DecoratingHttpServiceFunction")," interface as follows."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class MyDecorator implements DecoratingHttpServiceFunction {\n    @Override\n    public HttpResponse serve(HttpService delegate,\n                              ServiceRequestContext ctx,\n                              HttpRequest req) {\n        // ... Do something ...\n        return delegate.serve(ctx, req);\n    }\n}\n")),Object(r.b)("p",null,"Then, annotate your class or method with a ",Object(r.b)("a",{parentName:"p",href:"type://@Decorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorator.html"},"type://@Decorator")," annotation. In the following example,\n",Object(r.b)("inlineCode",{parentName:"p"},"MyDecorator")," will handle a request first, then ",Object(r.b)("inlineCode",{parentName:"p"},"AnotherDecorator")," will handle the request next,\nand finally ",Object(r.b)("inlineCode",{parentName:"p"},"hello()")," method will handle the request."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@Decorator(MyDecorator.class)\npublic class MyAnnotatedService {\n    @Decorator(AnotherDecorator.class)\n    @Get("/hello")\n    public HttpResponse hello() { ... }\n}\n')),Object(r.b)("h3",{id:"decorating-an-annotated-service-with-a-custom-decorator-annotation",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#decorating-an-annotated-service-with-a-custom-decorator-annotation","aria-label":"decorating an annotated service with a custom decorator annotation permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Decorating an annotated service with a custom decorator annotation"),Object(r.b)("p",null,"As you read earlier, you can write your own decorator with ",Object(r.b)("a",{parentName:"p",href:"type://DecoratingHttpServiceFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/DecoratingHttpServiceFunction.html"},"type://DecoratingHttpServiceFunction")," interface.\nIf your decorator does not require any parameter, that is fine. However, what if your decorator requires\na parameter? In this case, you can create your own decorator annotation. Let's see the following custom\ndecorator annotation which applies ",Object(r.b)("a",{parentName:"p",href:"type://LoggingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/logging/LoggingService.html"},"type://LoggingService")," to an annotated service."),Object(r.b)(s,{mdxType:"Tip"},Object(r.b)("p",null,"This example is actually just a copy of what Armeria provides out of the box. In reality,\nyou could just use ",Object(r.b)("a",{parentName:"p",href:"type://@LoggingDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/LoggingDecorator.html"},"type://@LoggingDecorator"),", without writing your own one.")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"@DecoratorFactory(LoggingDecoratorFactoryFunction.class)\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ ElementType.TYPE, ElementType.METHOD })\npublic @interface LoggingDecorator {\n\n    // Specify parameters for your decorator like below.\n    LogLevel requestLogLevel() default LogLevel.TRACE;\n\n    LogLevel successfulResponseLogLevel() default LogLevel.TRACE;\n\n    LogLevel failureResponseLogLevel() default LogLevel.WARN;\n\n    float samplingRate() default 1.0f;\n\n    // A special parameter in order to specify the order of a decorator.\n    int order() default 0;\n}\n\npublic final class LoggingDecoratorFactoryFunction\n        implements DecoratorFactoryFunction<LoggingDecorator> {\n\n    @Override\n    public Function<? super HttpService, ? extends HttpService>\n    newDecorator(LoggingDecorator parameter) {\n        return LoggingService\n            .builder()\n            .requestLogLevel(parameter.requestLogLevel())\n            .successfulResponseLogLevel(parameter.successfulResponseLogLevel())\n            .failureResponseLogLevel(parameter.failureResponseLogLevel())\n            .samplingRate(parameter.samplingRate())\n            .newDecorator();\n    }\n}\n")),Object(r.b)("p",null,"You can see ",Object(r.b)("a",{parentName:"p",href:"type://@DecoratorFactory:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/DecoratorFactory.html"},"type://@DecoratorFactory")," annotation at the first line of the example. It specifies\na factory class which implements ",Object(r.b)("a",{parentName:"p",href:"type://DecoratorFactoryFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/DecoratorFactoryFunction.html"},"type://DecoratorFactoryFunction")," interface. The factory will create\nan instance of ",Object(r.b)("a",{parentName:"p",href:"type://LoggingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/logging/LoggingService.html"},"type://LoggingService")," with parameters which you specified on the class or method like below."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @LoggingDecorator(requestLogLevel = LogLevel.INFO)\n    @Get("/hello1")\n    public HttpResponse hello1() { ... }\n\n    @LoggingDecorator(requestLogLevel = LogLevel.DEBUG, samplingRate = 0.05)\n    @Get("/hello2")\n    public HttpResponse hello2() { ... }\n}\n')),Object(r.b)("h3",{id:"evaluation-order-of-decorators",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#evaluation-order-of-decorators","aria-label":"evaluation order of decorators permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Evaluation order of decorators"),Object(r.b)("p",null,"Note that the evaluation order of the decorators is slightly different from that of the converters and exception\nhandlers. As you read in ",Object(r.b)("a",{parentName:"p",href:"#using-serverbuilder-to-configure-converters-and-exception-handlers"},"Using ServerBuilder to configure converters and exception\nhandlers"),",\nboth the converters and exception handlers are applied in the order of method-level ones,\nclass-level ones and global ones.\nUnlike them, decorators are applied in the opposite order as follows,\nbecause it is more understandable for a user to apply from the outer decorators to the inner decorators,\nwhich means the order of global decorators, class-level decorators and method-level decorators."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@Decorator(MyClassDecorator2.class)                 // order 2\n@Decorator(MyClassDecorator3.class)                 // order 3\npublic class MyAnnotatedService {\n\n    @Get("/hello")\n    @Decorator(MyMethodDecorator4.class)            // order 4\n    @Decorator(MyMethodDecorator5.class)            // order 5\n    public HttpResponse hello() { ... }\n}\n\n// ...\n\nsb.annotatedService(new MyAnnotatedService(),\n                    new MyGlobalDecorator1());      // order 1\n')),Object(r.b)("p",null,"The first rule is as explained before. However, if your own decorator annotations and ",Object(r.b)("a",{parentName:"p",href:"type://@Decorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorator.html"},"type://@Decorator"),"\nannotations are specified in a mixed order like below, you need to clearly specify their order using ",Object(r.b)("a",{parentName:"p",href:"type://@Decorator#order()"},"type://@Decorator#order()"),"\nattribute of the annotation. In the following example, you cannot make sure in what order they decorate\nthe service because Java collects repeatable annotations like ",Object(r.b)("a",{parentName:"p",href:"type://@Decorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorator.html"},"type://@Decorator")," into a single container\nannotation like ",Object(r.b)("a",{parentName:"p",href:"type://@Decorators:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorators.html"},"type://@Decorators")," so it does not know the specified order between ",Object(r.b)("a",{parentName:"p",href:"type://@Decorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Decorator.html"},"type://@Decorator"),"\nand ",Object(r.b)("a",{parentName:"p",href:"type://@LoggingDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/LoggingDecorator.html"},"type://@LoggingDecorator"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello")\n    @Decorator(MyMethodDecorator1.class)\n    @LoggingDecorator\n    @Decorator(MyMethodDecorator2.class)\n    public HttpResponse hello() { ... }\n}\n')),Object(r.b)("p",null,"To enforce the evaluation order of decorators, you can use ",Object(r.b)("inlineCode",{parentName:"p"},"order()")," attribute. Lower the order value is,\nearlier the decorator will be executed. The default value of ",Object(r.b)("inlineCode",{parentName:"p"},"order()")," attribute is ",Object(r.b)("inlineCode",{parentName:"p"},"0"),".\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"order()")," attribute is applicable only to class-level and method-level decorators."),Object(r.b)("p",null,"With the following example, the ",Object(r.b)("inlineCode",{parentName:"p"},"hello()")," will be executed with the following order:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"MyGlobalDecorator1")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"MyMethodDecorator1")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"LoggingDecorator")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"MyMethodDecorator2")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"MyAnnotatedService.hello()"))),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public class MyAnnotatedService {\n\n    @Get(\"/hello\")\n    @Decorator(value = MyMethodDecorator1.class, order = 1)\n    @LoggingDecorator(order = 2)\n    @Decorator(value = MyMethodDecorator2.class, order = 3)\n    public HttpResponse hello() { ... }\n}\n\n// Global-level decorators will not be affected by 'order'.\nsb.annotatedService(new MyAnnotatedService(),\n                    new MyGlobalDecorator1());\n")),Object(r.b)("p",null,"Note that you can even make a method-level decorator executed before a class-level decorator\nby adjusting the ",Object(r.b)("inlineCode",{parentName:"p"},"order()")," attribute:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@LoggingDecorator\npublic class MyAnnotatedService {\n\n    // LoggingDecorator -> MyMethodDecorator1 -> hello1()\n    @Get("/hello1")\n    @Decorator(MyMethodDecorator1.class)\n    public HttpResponse hello1() { ... }\n\n    // MyMethodDecorator1 -> LoggingDecorator -> hello2()\n    @Get("/hello2")\n    @Decorator(value = MyMethodDecorator1.class, order = -1)\n    public HttpResponse hello2() { ... }\n}\n')),Object(r.b)("p",null,"If you built a custom decorator annotation like ",Object(r.b)("a",{parentName:"p",href:"type://@LoggingDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/LoggingDecorator.html"},"type://@LoggingDecorator"),", it is recommended to\nadd an ",Object(r.b)("inlineCode",{parentName:"p"},"order()")," attribute so that the user of the custom annotation is able to adjust\nthe order value of the decorator:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public @interface MyDecoratorAnnotation {\n\n    // Define your attributes.\n    int myAttr1();\n\n    // A special parameter in order to specify the order of a decorator.\n    int order() default 0;\n}\n")),Object(r.b)("h2",{id:"media-type-negotiation",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#media-type-negotiation","aria-label":"media type negotiation permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Media type negotiation"),Object(r.b)("p",null,"Armeria provides ",Object(r.b)("a",{parentName:"p",href:"type://@Produces:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Produces.html"},"type://@Produces")," and ",Object(r.b)("a",{parentName:"p",href:"type://@Consumes:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Consumes.html"},"type://@Consumes")," annotations to support media type\nnegotiation. It is not necessary if you have only one service method for a path and an HTTP method.\nHowever, assume that you have multiple service methods for the same path and the same HTTP method as follows."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello")\n    public HttpResponse hello1() {\n        // Return a text document to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.PLAIN_TEXT_UTF_8,\n                               "Armeria");\n    }\n\n    @Get("/hello")\n    public HttpResponse hello2() {\n        // Return a JSON object to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.JSON_UTF_8,\n                               "{ \\"name\\": \\"Armeria\\" }");\n    }\n}\n')),Object(r.b)("p",null,"If the media type is not specified on any methods bound to the same path pattern, the first method declared will\nbe used and the other methods will be ignored. In this example, ",Object(r.b)("inlineCode",{parentName:"p"},"hello1()")," will be chosen and the client\nwill always receive a text document. What if you want to get a JSON object from the path ",Object(r.b)("inlineCode",{parentName:"p"},"/hello"),"?\nYou can just specify the type of the content which your method produces as follows and add an ",Object(r.b)("inlineCode",{parentName:"p"},"Accept")," header\nto your client request."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Get("/hello")\n    @Produces("text/plain")\n    public HttpResponse helloText() {\n        // Return a text document to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.PLAIN_TEXT_UTF_8,\n                               "Armeria");\n    }\n\n    @Get("/hello")\n    @Produces("application/json")\n    public HttpResponse helloJson() {\n        // Return a JSON object to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.JSON_UTF_8,\n                               "{ \\"name\\": \\"Armeria\\" }");\n    }\n}\n')),Object(r.b)("p",null,"A request like the following would get a text document:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-http"},"GET /hello HTTP/1.1\nAccept: text/plain\n")),Object(r.b)("p",null,"A request like the following would get a JSON object:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-http"},"GET /hello HTTP/1.1\nAccept: application/json\n")),Object(r.b)(p,{mdxType:"Warning"},Object(r.b)("p",null,"Note that a ",Object(r.b)("inlineCode",{parentName:"p"},"Content-Type")," header of a response is not automatically set. You may want to get the\nnegotiated ",Object(r.b)("a",{parentName:"p",href:"type://@Produces:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Produces.html"},"type://@Produces")," from ",Object(r.b)("a",{parentName:"p",href:"type://ServiceRequestContext#negotiatedResponseMediaType():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServiceRequestContext.html#negotiatedResponseMediaType()"},"type://ServiceRequestContext#negotiatedResponseMediaType()")," method and\nset it as the value of the ",Object(r.b)("inlineCode",{parentName:"p"},"Content-Type")," header of your response.")),Object(r.b)("p",null,"If a client sends a request without an ",Object(r.b)("inlineCode",{parentName:"p"},"Accept")," header (or sending an ",Object(r.b)("inlineCode",{parentName:"p"},"Accept")," header with an unsupported\ncontent type), it would be usually mapped to ",Object(r.b)("inlineCode",{parentName:"p"},"helloJson()")," method because the methods are sorted by the\nname of the type in an alphabetical order."),Object(r.b)("p",null,"In this case, you can adjust the order of the methods with ",Object(r.b)("a",{parentName:"p",href:"type://@Order:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Order.html"},"type://@Order")," annotation. The default value of\n",Object(r.b)("a",{parentName:"p",href:"type://@Order:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Order.html"},"type://@Order")," annotation is ",Object(r.b)("inlineCode",{parentName:"p"},"0"),". If you set the value less than ",Object(r.b)("inlineCode",{parentName:"p"},"0"),", the method is used earlier than\nthe other methods, which means that it would be used as a default when there is no matched produce type.\nIn this example, it would also make the same effect to annotate ",Object(r.b)("inlineCode",{parentName:"p"},"helloJson()")," with ",Object(r.b)("inlineCode",{parentName:"p"},"@Order(1)"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Order(-1)\n    @Get("/hello")\n    @Produces("text/plain")\n    public HttpResponse helloText() {\n        // Return a text document to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.PLAIN_TEXT_UTF_8,\n                               "Armeria");\n    }\n\n    @Get("/hello")\n    @Produces("application/json")\n    public HttpResponse helloJson() {\n        // Return a JSON object to the client.\n        return HttpResponse.of(HttpStatus.OK, MediaType.JSON_UTF_8,\n                               "{ \\"name\\": \\"Armeria\\" }");\n    }\n}\n')),Object(r.b)("p",null,"Next, let's learn how to handle a ",Object(r.b)("inlineCode",{parentName:"p"},"Content-Type")," header of a request. Assume that there are two service\nmethods that expect a text document and a JSON object as a content of a request, respectively.\nYou can annotate them with ",Object(r.b)("a",{parentName:"p",href:"type://@Consumes:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Consumes.html"},"type://@Consumes")," annotation."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Post("/hello")\n    @Consumes("text/plain")\n    public HttpResponse helloText(AggregatedHttpRequest request) {\n        // Get a text content by calling request.contentAscii().\n    }\n\n    @Post("/hello")\n    @Consumes("application/json")\n    public HttpResponse helloJson(AggregatedHttpRequest request) {\n        // Get a JSON object by calling request.contentUtf8().\n    }\n}\n')),Object(r.b)("p",null,"A request like the following would be handled by ",Object(r.b)("inlineCode",{parentName:"p"},"helloText()")," method:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-http"},"POST /hello HTTP/1.1\nContent-Type: text/plain\nContent-Length: 7\n\nArmeria\n")),Object(r.b)("p",null,"A request like the following would be handled by ",Object(r.b)("inlineCode",{parentName:"p"},"helloJson()")," method:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-http"},'POST /hello HTTP/1.1\nContent-Type: application/json\nContent-Length: 21\n\n{ "name": "Armeria" }\n')),Object(r.b)("p",null,"However, if a client sends a request with a ",Object(r.b)("inlineCode",{parentName:"p"},"Content-Type: application/octet-stream")," header which is not\nspecified with ",Object(r.b)("a",{parentName:"p",href:"type://@Consumes:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Consumes.html"},"type://@Consumes"),", the client would get an HTTP status code of 415 which means\n",Object(r.b)("inlineCode",{parentName:"p"},"Unsupported Media Type"),". If you want to make one of the methods catch-all, you can remove the annotation\nas follows. ",Object(r.b)("inlineCode",{parentName:"p"},"helloCatchAll()")," method would accept every request except for the request with a\n",Object(r.b)("inlineCode",{parentName:"p"},"Content-Type: application/json")," header."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Post("/hello")\n    public HttpResponse helloCatchAll(AggregatedHttpRequest request) {\n        // Get a content by calling request.content() and handle it as a text document or something else.\n    }\n\n    @Post("/hello")\n    @Consumes("application/json")\n    public HttpResponse helloJson(AggregatedHttpRequest request) {\n        // Get a JSON object by calling request.contentUtf8().\n    }\n}\n')),Object(r.b)("h3",{id:"creating-user-defined-media-type-annotations",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#creating-user-defined-media-type-annotations","aria-label":"creating user defined media type annotations permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Creating user-defined media type annotations"),Object(r.b)("p",null,"Armeria provides pre-defined annotations such as ",Object(r.b)("a",{parentName:"p",href:"type://@ConsumesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ConsumesJson.html"},"type://@ConsumesJson"),", ",Object(r.b)("a",{parentName:"p",href:"type://@ConsumesText:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ConsumesText.html"},"type://@ConsumesText"),",\n",Object(r.b)("a",{parentName:"p",href:"type://@ConsumesBinary:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ConsumesBinary.html"},"type://@ConsumesBinary")," and ",Object(r.b)("a",{parentName:"p",href:"type://@ConsumesOctetStream:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ConsumesOctetStream.html"},"type://@ConsumesOctetStream")," which are aliases for\n",Object(r.b)("inlineCode",{parentName:"p"},'@Consumes("application/json; charset=utf-8")'),", ",Object(r.b)("inlineCode",{parentName:"p"},'@Consumes("text/plain; charset=utf-8")'),",\n",Object(r.b)("inlineCode",{parentName:"p"},'@Consumes("application/binary")')," and ",Object(r.b)("inlineCode",{parentName:"p"},'@Consumes("application/octet-stream")')," respectively.\nAlso, ",Object(r.b)("a",{parentName:"p",href:"type://@ProducesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesJson.html"},"type://@ProducesJson"),", ",Object(r.b)("a",{parentName:"p",href:"type://@ProducesText:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesText.html"},"type://@ProducesText"),", ",Object(r.b)("a",{parentName:"p",href:"type://@ProducesBinary:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesBinary.html"},"type://@ProducesBinary")," and ",Object(r.b)("a",{parentName:"p",href:"type://@ProducesOctetStream:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesOctetStream.html"},"type://@ProducesOctetStream"),"\nare provided in the same manner."),Object(r.b)("p",null,"If there is no annotation that meets your need, you can define your own annotations for ",Object(r.b)("a",{parentName:"p",href:"type://@Consumes:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Consumes.html"},"type://@Consumes"),"\nand ",Object(r.b)("a",{parentName:"p",href:"type://@Produces:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Produces.html"},"type://@Produces")," as follows. Specifying your own annotations is recommended because writing a media type\nwith a string is more error-prone."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@Retention(RetentionPolicy.RUNTIME)\n@Target({ ElementType.TYPE, ElementType.METHOD })\n@Consumes("application/xml")\npublic @interface MyConsumableType {}\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ ElementType.TYPE, ElementType.METHOD })\n@Produces("application/xml")\npublic @interface MyProducibleType {}\n')),Object(r.b)("p",null,"Then, you can annotate your service method with your annotation as follows."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n    @Post("/hello")\n    @MyConsumableType  // the same as @Consumes("application/xml")\n    @MyProducibleType  // the same as @Produces("application/xml")\n    public MyResponse hello(MyRequest myRequest) { ... }\n}\n')),Object(r.b)("h2",{id:"specifying-additional-response-headerstrailers",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#specifying-additional-response-headerstrailers","aria-label":"specifying additional response headerstrailers permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Specifying additional response headers/trailers"),Object(r.b)("p",null,"Armeria provides a way to configure additional headers/trailers via annotation,\n",Object(r.b)("a",{parentName:"p",href:"type://@AdditionalHeader:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/AdditionalHeader.html"},"type://@AdditionalHeader")," for HTTP headers and ",Object(r.b)("a",{parentName:"p",href:"type://@AdditionalTrailer:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/AdditionalTrailer.html"},"type://@AdditionalTrailer")," for HTTP trailers."),Object(r.b)("p",null,"You can annotate your service method with the annotations as follows."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.server.annotation.AdditionalHeader;\nimport com.linecorp.armeria.server.annotation.AdditionalTrailer;\n\n@AdditionalHeader(name = "custom-header", value = "custom-value")\n@AdditionalTrailer(name = "custom-trailer", value = "custom-value")\npublic class MyAnnotatedService {\n    @Get("/hello")\n    @AdditionalHeader(name = "custom-header-2", value = "custom-value")\n    @AdditionalTrailer(name = "custom-trailer-2", value = "custom-value")\n    public HttpResponse hello() { ... }\n}\n')),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"type://@AdditionalHeader:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/AdditionalHeader.html"},"type://@AdditionalHeader")," or ",Object(r.b)("a",{parentName:"p",href:"type://@AdditionalTrailer:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/AdditionalTrailer.html"},"type://@AdditionalTrailer")," specified at the method level takes precedence over\nwhat's specified at the class level if it has the same name, e.g."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'@AdditionalHeader(name = "custom-header", value = "custom-value")\n@AdditionalTrailer(name = "custom-trailer", value = "custom-value")\npublic class MyAnnotatedService {\n    @Get("/hello")\n    @AdditionalHeader(name = "custom-header", value = "custom-overwritten")\n    @AdditionalTrailer(name = "custom-trailer", value = "custom-overwritten")\n    public HttpResponse hello() { ... }\n}\n')),Object(r.b)("p",null,"In this case, the values of the HTTP header named ",Object(r.b)("inlineCode",{parentName:"p"},"custom-header")," and the HTTP trailer named\n",Object(r.b)("inlineCode",{parentName:"p"},"custom-trailer")," will be ",Object(r.b)("inlineCode",{parentName:"p"},"custom-overwritten"),", not ",Object(r.b)("inlineCode",{parentName:"p"},"custom-value"),"."),Object(r.b)("p",null,"Note that the trailers will not be injected into the responses with the following HTTP status code,\nbecause they always have an empty content."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",colspan:1,rowspan:1},Object(r.b)("p",{parentName:"th"},"Status code")),Object(r.b)("th",{parentName:"tr",colspan:1,rowspan:1},Object(r.b)("p",{parentName:"th"},"Description")))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",colspan:1,rowspan:1},Object(r.b)("p",{parentName:"td"},"204")),Object(r.b)("td",{parentName:"tr",colspan:1,rowspan:1},Object(r.b)("p",{parentName:"td"},"No content"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",colspan:1,rowspan:1},Object(r.b)("p",{parentName:"td"},"205")),Object(r.b)("td",{parentName:"tr",colspan:1,rowspan:1},Object(r.b)("p",{parentName:"td"},"Reset content"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",colspan:1,rowspan:1},Object(r.b)("p",{parentName:"td"},"304")),Object(r.b)("td",{parentName:"tr",colspan:1,rowspan:1},Object(r.b)("p",{parentName:"td"},"Not modified"))))),Object(r.b)("h2",{id:"using-a-composite-annotation",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#using-a-composite-annotation","aria-label":"using a composite annotation permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Using a composite annotation"),Object(r.b)("p",null,"To avoid specifying a common set of annotations repetitively, you may want to create a composite annotation\nwhich is annotated by other annotations. For example, let's assume that there is a service class like the below:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Post("/create")\n    @ConsumesJson\n    @ProducesJson\n    @LoggingDecorator\n    @MyAuthenticationDecorator\n    public HttpResponse create() { ... }\n\n    @Post("/update")\n    @ConsumesJson\n    @ProducesJson\n    @LoggingDecorator\n    @MyAuthenticationDecorator\n    public HttpResponse update() { ... }\n}\n')),Object(r.b)("p",null,"In the above example, you had to add the same 4 annotations to the two different methods. It is obviously\ntoo verbose and duplicate, so we could simplify them by creating a composite annotation like the following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"@Retention(RetentionPolicy.RUNTIME)\n@ConsumesJson\n@ProducesJson\n@LoggingDecorator\n@MyAuthenticationDecorator\npublic @interface MyCreateOrUpdateApiSpec {}\n")),Object(r.b)("p",null,"Now, let's rewrite the service class with the composite annotation. It is definitely less verbose than before.\nMoreover, you don't need to update both ",Object(r.b)("inlineCode",{parentName:"p"},"create()")," and ",Object(r.b)("inlineCode",{parentName:"p"},"update()")," but only ",Object(r.b)("inlineCode",{parentName:"p"},"MyCreateOrUpdateApiSpec"),"\nwhen you add more common annotations to them."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyAnnotatedService {\n\n    @Post("/create")\n    @MyCreateOrUpdateApiSpec\n    public HttpResponse create() { ... }\n\n    @Post("/update")\n    @MyCreateOrUpdateApiSpec\n    public HttpResponse update() { ... }\n}\n')),Object(r.b)("h2",{id:"specifying-the-service-name",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#specifying-the-service-name","aria-label":"specifying the service name permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Specifying the service name"),Object(r.b)("p",null,"A service name is human-readable string that is often used as a meter tag or distributed trace's span name.\nBy default, an annotated service uses its class name as its service name.\nYou can override it by annotating a class or method with ",Object(r.b)("a",{parentName:"p",href:"type://@ServiceName:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ServiceName.html"},"type://@ServiceName")," like the following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'public class MyService {\n    @Get("/")\n    public String get(ServiceRequestContext ctx) {\n        ctx.log().whenAvailable(RequestLogProperty.NAME).thenAccept(log -> {\n            assert log.serviceName().equals(MyService.class.getName());\n        });\n    }\n}\n\n// Override the default service name by the class annotation\n@ServiceName("my-service")\npublic class MyService {\n    @Get("/")\n    public String get(ServiceRequestContext ctx) {\n        ctx.log().whenAvailable(RequestLogProperty.NAME).thenAccept(log -> {\n            assert log.serviceName().equals("my-service");\n        });\n    }\n\n    // Override the default service name by the method annotation\n    @ServiceName("my-post-service")\n    @Post("/")\n    public String post(ServiceRequestContext ctx) {\n        ctx.log().whenAvailable(RequestLogProperty.NAME).thenAccept(log -> {\n            assert log.serviceName().equals("my-post-service");\n        });\n    }\n}\n\n// Or the default name could get overridden programmatically using a decorator.\nServerBuilder sb = Server.builder();\nsb.annotatedService("/", new MyService(), service -> {\n    return service.decorate((delegate, ctx, req) -> {\n        ctx.logBuilder().name("my-decorated-service", ctx.method().name());\n        return delegate.serve(ctx, req);\n    });\n});\n')),Object(r.b)(s,{mdxType:"Tip"},Object(r.b)("p",null,"You can also use ",Object(r.b)("a",{parentName:"p",href:"type://RequestLogAccess#whenComplete():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/logging/RequestLogAccess.html#whenComplete()"},"type://RequestLogAccess#whenComplete()")," to access ",Object(r.b)("a",{parentName:"p",href:"type://RequestOnlyLog#name():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/logging/RequestOnlyLog.html#name()"},"type://RequestOnlyLog#name()"),".\nPlease refer to ",Object(r.b)("a",{parentName:"p",href:"/docs/advanced-structured-logging"},"Structured logging"),"\nfor more information about RPC and HTTP service names, and how to use it.")),Object(r.b)("h2",{id:"kotlin-coroutines-support",style:{position:"relative"}},Object(r.b)("a",{parentName:"h2",href:"#kotlin-coroutines-support","aria-label":"kotlin coroutines support permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Kotlin coroutines support"),Object(r.b)("p",null,"You can implement annotated services with ",Object(r.b)("a",{parentName:"p",href:"https://kotlinlang.org/docs/reference/coroutines-overview.html"},"Kotlin coroutines"),"\nby adding the following dependency:"),Object(r.b)(m,{boms:[{groupId:"com.linecorp.armeria",artifactId:"armeria-bom"}],dependencies:[{groupId:"com.linecorp.armeria",artifactId:"armeria-kotlin"}],mdxType:"RequiredDependencies"}),Object(r.b)("p",null,"Then, define the suspending function:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-kotlin"},'class MyAnnotatedService {\n    @Get("/users/{name}")\n    suspend fun getUserToken(@Param("name") name: String): String {\n        val user = myReactiveRepository.findByName(name).await()\n        return user.token\n    }\n}\n')),Object(r.b)("p",null,"Note that you can omit the value of ",Object(r.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," if you compiled your Kotlin code with ",Object(r.b)("a",{parentName:"p",href:"https://kotlinlang.org/docs/reference/compiler-reference.html#-java-parameters"},Object(r.b)("inlineCode",{parentName:"a"},"java-parameters"))," option."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-kotlin"},'class MyAnnotatedService {\n    @Get("/users/{name}")\n    suspend fun getUserToken(@Param name: String): String { ... }\n}\n')),Object(r.b)("h3",{id:"coroutine-dispatcher",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#coroutine-dispatcher","aria-label":"coroutine dispatcher permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Coroutine dispatcher"),Object(r.b)("p",null,"By default, Armeria uses a context-aware event loop as a ",Object(r.b)("a",{parentName:"p",href:"https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-dispatcher/"},"coroutine dispatcher"),".\nA context-aware blocking executor is used as a dispatcher if you annotate a service method with ",Object(r.b)("a",{parentName:"p",href:"type://@Blocking:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Blocking.html"},"type://@Blocking")," or enable ",Object(r.b)("a",{parentName:"p",href:"type://AnnotatedServiceBindingBuilder#useBlockingTaskExecutor(boolean):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/AnnotatedServiceBindingBuilder.html#useBlockingTaskExecutor(boolean)"},"type://AnnotatedServiceBindingBuilder#useBlockingTaskExecutor(boolean)"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-kotlin"},'serverBuilder\n    .annotatedService()\n    // Enable `useBlockingTaskExecutor`.\n    .useBlockingTaskExecutor(true)\n    .build(MyAnnotatedService())\n\n// or\n\nimport com.linecorp.armeria.server.annotation.Blocking\n\nclass MyAnnotatedService {\n    @Blocking\n    @Get("/blocking/users/{name}")\n    suspend fun getUserTokenBlocking(@Param("name") name: String): String {\n        val id = myReactiveClient.getId(name).await()\n        val user = myBlockingRepository.findById(id)\n        return user.token\n    }\n}\n')),Object(r.b)(s,{mdxType:"Tip"},Object(r.b)("p",null,"If you use ",Object(r.b)("a",{parentName:"p",href:"/docs/advanced-logging"},"Logback integration")," or ",Object(r.b)("a",{parentName:"p",href:"/docs/advanced-zipkin"},"Zipkin integration"),",\ncoroutines should be executed in a thread that is aware of ",Object(r.b)("a",{parentName:"p",href:"type://RequestContext:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/RequestContext.html"},"type://RequestContext"),".")),Object(r.b)("h3",{id:"coroutinecontextservice-decorator",style:{position:"relative"}},Object(r.b)("a",{parentName:"h3",href:"#coroutinecontextservice-decorator","aria-label":"coroutinecontextservice decorator permalink",className:"anchor before"},Object(r.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),Object(r.b)("inlineCode",{parentName:"h3"},"CoroutineContextService")," decorator"),Object(r.b)("p",null,"Armeria provides a way to configure a coroutine context of annotated service methods\nusing ",Object(r.b)("a",{parentName:"p",href:"type://CoroutineContextService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/kotlin/CoroutineContextService.html"},"type://CoroutineContextService")," decorator."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-kotlin"},'import com.linecorp.armeria.server.kotlin.CoroutineContextService\n\nserverBuilder\n    .annotatedService()\n    .decorator(CoroutineContextService.newDecorator { ctx ->\n        CoroutineName(ctx.config().defaultServiceNaming().serviceName(ctx) ?: "name")\n    })\n    .build(MyAnnotatedService())\n')))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-server-annotated-service-mdx-c653faaaac77a8a12ae9.js.map
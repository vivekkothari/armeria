(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"/94A":function(e){e.exports=JSON.parse('{"root":["index","setup"],"Useful links":{"Tutorials":"/tutorials","Community articles":"/community/articles","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"Server":["server-basics","server-decorator","server-grpc","server-thrift","server-docservice","server-annotated-service","server-http-file","server-servlet","server-access-log","server-cors","server-sse","server-service-registration"],"Client":["client-http","client-thrift","client-grpc","client-factory","client-decorator","client-retrofit","client-custom-http-headers","client-timeouts","client-retry","client-circuit-breaker","client-service-discovery"],"Advanced":["advanced-logging","advanced-structured-logging","advanced-custom-attributes","advanced-streaming-backpressure","advanced-structured-logging-kafka","advanced-metrics","advanced-unit-testing","advanced-production-checklist","advanced-zipkin","advanced-saml","advanced-spring-webflux-integration","advanced-dropwizard-integration","advanced-scala","advanced-scalapb","advanced-client-interoperability"]}')},notG:function(e,t,r){"use strict";r.r(t),r.d(t,"pageTitle",(function(){return o})),r.d(t,"_frontmatter",(function(){return l})),r.d(t,"default",(function(){return p}));var i,c=r("zLVn"),a=(r("q1tI"),r("7ljp")),n=r("xCMr"),o="Collecting metrics",l={},s=(i="Tip",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.b)("div",e)}),m={pageTitle:o,_frontmatter:l},d=n.a;function p(e){var t=e.components,r=Object(c.a)(e,["components"]);return Object(a.b)(d,Object.assign({},m,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"collecting-metrics",style:{position:"relative"}},Object(a.b)("a",{parentName:"h1",href:"#collecting-metrics","aria-label":"collecting metrics permalink",className:"anchor before"},Object(a.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Collecting metrics"),Object(a.b)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"#collecting-server-side-metrics"},"Collecting server-side metrics")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"#collecting-client-side-metrics"},"Collecting client-side metrics")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"#changing-the-default-distribution-summary-config"},"Changing the default distribution summary config")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"#excluding-certain-meters-created-by-armeria"},"Excluding certain meters created by Armeria"))),Object(a.b)("p",null,"Armeria has built-in support for collecting metrics both on the server and client side.\nThis page describes how to enable this."),Object(a.b)(s,{mdxType:"Tip"},Object(a.b)("p",null,"The metric data is collected using the ",Object(a.b)("a",{parentName:"p",href:"https://micrometer.io/"},"Micrometer")," library.\nPlease consult its documentation for information on how to expose the collected metrics to\nvarious monitoring systems such as ",Object(a.b)("a",{parentName:"p",href:"https://prometheus.io/"},"Prometheus"),",\n",Object(a.b)("a",{parentName:"p",href:"https://metrics.dropwizard.io/4.1.2/"},"Dropwizard Metrics")," and ",Object(a.b)("a",{parentName:"p",href:"https://www.datadoghq.com/"},"Datadog"),".")),Object(a.b)("h2",{id:"collecting-server-side-metrics",style:{position:"relative"}},Object(a.b)("a",{parentName:"h2",href:"#collecting-server-side-metrics","aria-label":"collecting server side metrics permalink",className:"anchor before"},Object(a.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Collecting server-side metrics"),Object(a.b)("p",null,"You can use ",Object(a.b)("a",{parentName:"p",href:"type://MetricCollectingService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/metric/MetricCollectingService.html"},"type://MetricCollectingService")," with ",Object(a.b)("a",{parentName:"p",href:"type://MeterIdPrefixFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/metric/MeterIdPrefixFunction.html"},"type://MeterIdPrefixFunction")," for collecting metrics\nof your services."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.common.MeterIdPrefixFunction;\nimport com.linecorp.armeria.server.Server;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport com.linecorp.armeria.server.metric.MetricCollectingService;\n\nServer.builder()\n      .http(new InetSocketAddress(address, port))\n      .service(new MyHttpService())\n      .decorator(MetricCollectingService.newDecorator(\n              MeterIdPrefixFunction.ofDefault("http.service")))\n      .build();\n')),Object(a.b)("p",null,"If you are interested in monitoring ",Object(a.b)("a",{parentName:"p",href:"https://grpc.github.io/grpc/core/md_doc_statuscodes.html"},"gRPC status"),"\nfor a gRPC service, you can use ",Object(a.b)("a",{parentName:"p",href:"type://GrpcMeterIdPrefixFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/grpc/GrpcMeterIdPrefixFunction.html"},"type://GrpcMeterIdPrefixFunction")," instead of ",Object(a.b)("a",{parentName:"p",href:"type://MeterIdPrefixFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/metric/MeterIdPrefixFunction.html"},"type://MeterIdPrefixFunction"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.common.grpc.GrpcMeterIdPrefixFunction;\nimport com.linecorp.armeria.server.grpc.GrpcService;\n\nServer.builder()\n      .http(new InetSocketAddress(address, port))\n      .service(GrpcService.builder()\n                          .addService(new MyHelloService())\n                          .build())\n      .decorator(MetricCollectingService.newDecorator(\n              GrpcMeterIdPrefixFunction.of("grpc.service")))\n      .build();\n')),Object(a.b)("p",null,"In cases where more sophisticated filtering and/or mangling of the generated metrics are required,\nyou can use the ",Object(a.b)("a",{parentName:"p",href:"type://ServerBuilder#meterRegistry(MeterRegistry):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html#meterRegistry(io.micrometer.core.instrument.MeterRegistry)"},"type://ServerBuilder#meterRegistry(MeterRegistry)")," method like this:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},"Server.builder()\n      // ...\n      .meterRegistry(myMeterRegistry);\n")),Object(a.b)("h2",{id:"collecting-client-side-metrics",style:{position:"relative"}},Object(a.b)("a",{parentName:"h2",href:"#collecting-client-side-metrics","aria-label":"collecting client side metrics permalink",className:"anchor before"},Object(a.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Collecting client-side metrics"),Object(a.b)("p",null,"This approach can be used to collect metrics for a ",Object(a.b)("a",{parentName:"p",href:"type://WebClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/WebClient.html"},"type://WebClient")," and a gRPC client:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},'import com.linecorp.armeria.client.Clients;\nimport com.linecorp.armeria.client.WebClient;\nimport com.linecorp.armeria.client.metric.MetricCollectingClient;\n\n// Decorate a WebClient with MetricCollectingClient\nWebClient.builder(httpUrl)\n         .decorator(MetricCollectingClient.newDecorator(\n                 MeterIdPrefixFunction.ofDefault("http.client")))\n         .build();\n\n// Decorate a gRPC client with MetricCollectingClient\nClients.builder(grpcUrl)\n       .decorator(MetricCollectingClient.newDecorator(\n               GrpcMeterIdPrefixFunction.of("grpc.client")))\n       .build(HelloServiceBlockingStub.class);\n')),Object(a.b)("p",null,"Like the server-side metrics described above, certain scenarios might require you to\nprovide a custom meter registry. To accomplish this, override the ",Object(a.b)("a",{parentName:"p",href:"type://ClientFactory:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/ClientFactory.html"},"type://ClientFactory")," in this way:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},"import com.linecorp.armeria.client.ClientFactory;\nimport com.linecorp.armeria.client.Clients;\n\nClientFactory clientFactory = \n      ClientFactory.builder()\n                   .meterRegistry(myMeterRegistry)\n                   .build();\n                   \n// Set a cumster ClientFactory to a WebClient                   \nWebClient.builder(httpUrl)\n         .factory(clientFactory)\n          // ...\n         .build();\n\n// Set a cumster ClientFactory to a gRPC client\nClients.builder(grpcUrl)\n       .factory(clientFactory)\n        // ...\n       .build(HelloServiceBlockingStub.class);\n")),Object(a.b)("h2",{id:"changing-the-default-distribution-summary-config",style:{position:"relative"}},Object(a.b)("a",{parentName:"h2",href:"#changing-the-default-distribution-summary-config","aria-label":"changing the default distribution summary config permalink",className:"anchor before"},Object(a.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Changing the default distribution summary config"),Object(a.b)("p",null,"A ",Object(a.b)("a",{parentName:"p",href:"https://micrometer.io/docs/concepts#_distribution_summaries"},"distribution summary")," is used to track\nthe distribution of events. Armeria provides a sensible default\n",Object(a.b)("a",{parentName:"p",href:"https://javadoc.io/doc/io.micrometer/micrometer-core/latest/io/micrometer/core/instrument/distribution/DistributionStatisticConfig.html"},"DistributionStatisticConfig"),"\nfor measuring the following metrics:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A length of the request content"),Object(a.b)("li",{parentName:"ul"},"A length of the response content"),Object(a.b)("li",{parentName:"ul"},"A duration of request"),Object(a.b)("li",{parentName:"ul"},"A duration of response")),Object(a.b)("p",null,"If you want to override the default config,\nyou can set your own ",Object(a.b)("inlineCode",{parentName:"p"},"DistributionStatisticConfig")," using ",Object(a.b)("a",{parentName:"p",href:"type://MoreMeters#setDistributionStatisticConfig(DistributionStatisticConfig):https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/metric/MoreMeters.html#setDistributionStatisticConfig(io.micrometer.core.instrument.distribution.DistributionStatisticConfig)"},"type://MoreMeters#setDistributionStatisticConfig(DistributionStatisticConfig)"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},"import com.linecorp.armeria.common.metric.MoreMeters;\nimport io.micrometer.core.instrument.distribution.DistributionStatisticConfig;\n\nDistributionStatisticConfig myDistStatCfg =\n        DistributionStatisticConfig.builder()\n                                   .percentilesHistogram(false)\n                                   .sla()\n                                   .percentiles({ 0, 0.5, 0.75, 0.9, 0.95, 0.99, 1.0 })\n                                   .percentilePrecision(10)\n                                   .minimumExpectedValue(1L)\n                                   .maximumExpectedValue(Long.MAX_VALUE)\n                                   .expiry(Duration.ofMinutes(10))\n                                   .bufferLength(10)\n                                   .build();\nMoreMeters.setDistributionStatisticConfig(myDistStatCfg);\n")),Object(a.b)("h2",{id:"excluding-certain-meters-created-by-armeria",style:{position:"relative"}},Object(a.b)("a",{parentName:"h2",href:"#excluding-certain-meters-created-by-armeria","aria-label":"excluding certain meters created by armeria permalink",className:"anchor before"},Object(a.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Excluding certain meters created by Armeria"),Object(a.b)("p",null,"Micrometer's ",Object(a.b)("inlineCode",{parentName:"p"},"MeterRegistry")," can be configured with ",Object(a.b)("a",{parentName:"p",href:"https://micrometer.io/docs/concepts#_meter_filters"},"meter filters"),".\nIf you need to control the exported meters, you can apply sophisticated filters to the ",Object(a.b)("inlineCode",{parentName:"p"},"MeterRegistry"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-java"},'import io.micrometer.core.instrument.Metrics;\n\nMetrics.globalRegistry\n       .config()\n       .meterFilter(MeterFilter.deny(id -> \n               id.getTag("service").equals("MyHealthCheckService")));\n       .meterFilter(MeterFilter.denyNameStartsWith("jvm"));\n')),Object(a.b)("p",null,"Please refer to ",Object(a.b)("a",{parentName:"p",href:"type://MeterIdPrefixFunction:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/metric/MeterIdPrefixFunction.html"},"type://MeterIdPrefixFunction")," to learn what kinds of tags are used for request metrics."))}p.isMDXComponent=!0},xCMr:function(e,t,r){"use strict";var i=r("Wbzz"),c=r("q1tI"),a=r.n(c),n=r("/94A"),o=r("+ejy");t.a=function(e){var t=Object(i.useStaticQuery)("1217743243").allMdx.nodes;return a.a.createElement(o.a,Object.assign({},e,{candidateMdxNodes:t,index:n,prefix:"docs",pageTitleSuffix:"Armeria documentation"}))}}}]);
//# sourceMappingURL=component---src-pages-docs-advanced-metrics-mdx-cf64a44d817a383ea735.js.map
(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"/94A":function(e){e.exports=JSON.parse('{"root":["index","setup"],"Useful links":{"Tutorials":"/tutorials","Community articles":"/community/articles","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"Server":["server-basics","server-decorator","server-grpc","server-thrift","server-docservice","server-annotated-service","server-http-file","server-servlet","server-access-log","server-cors","server-sse","server-service-registration"],"Client":["client-http","client-thrift","client-grpc","client-factory","client-decorator","client-retrofit","client-custom-http-headers","client-timeouts","client-retry","client-circuit-breaker","client-service-discovery"],"Advanced":["advanced-logging","advanced-structured-logging","advanced-custom-attributes","advanced-streaming-backpressure","advanced-structured-logging-kafka","advanced-metrics","advanced-unit-testing","advanced-production-checklist","advanced-zipkin","advanced-saml","advanced-spring-webflux-integration","advanced-dropwizard-integration","advanced-scala","advanced-scalapb","advanced-client-interoperability"]}')},F7V9:function(e,a,t){"use strict";t.r(a),t.d(a,"pageTitle",(function(){return o})),t.d(a,"_frontmatter",(function(){return l})),t.d(a,"default",(function(){return d}));var r=t("zLVn"),n=(t("q1tI"),t("7ljp")),i=t("xCMr"),c=t("aRgT"),o="ScalaPB integration",l={},s=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(n.b)("div",a)}},p=s("Tip"),b=s("CodeBlock"),m={pageTitle:o,_frontmatter:l},u=i.a;function d(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(n.b)(u,Object.assign({},m,t,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"scalapb-integration",style:{position:"relative"}},Object(n.b)("a",{parentName:"h1",href:"#scalapb-integration","aria-label":"scalapb integration permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"ScalaPB integration"),Object(n.b)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("a",{parentName:"p",href:"#running-a-grpc-service"},"Running a gRPC service"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("a",{parentName:"p",href:"#calling-a-grpc-service"},"Calling a gRPC service"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("a",{parentName:"p",href:"#supporting-scalapb-in-annotated-services"},"Supporting ScalaPB in annotated services.")),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#converting-an-http-request-to-a-scalapbs-generatedmesage"},"Converting an HTTP request to a ScalaPB's GeneratedMesage")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#returning-a-scalapbs-generatedmesage"},"Returning a ScalaPB's GeneratedMesage")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#injecting-an-executioncontext-to-an-annotated-service-method"},"Injecting an ExecutionContext to an annotated service method"))))),Object(n.b)(p,{mdxType:"Tip"},Object(n.b)("p",null,"Visit ",Object(n.b)("a",{parentName:"p",href:"https://github.com/line/armeria/tree/master/examples/grpc-scala"},"here")," to find a fully working example.")),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://scalapb.github.io/"},"ScalaPB")," is a protocol buffer compiler (protoc) plugin for\n",Object(n.b)("a",{parentName:"p",href:"https://www.scala-lang.org/"},"Scala"),". It will generate Scala case classes, parsers and serializers for\nyour ",Object(n.b)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers"},"protocol buffers"),".\nScalaPB also supports a thin wrapper around ",Object(n.b)("a",{parentName:"p",href:"https://grpc.io/docs/languages/java/quickstart/"},"grpc-java"),",\nand provides you with an interface that is based on Scala's standard library\n",Object(n.b)("a",{parentName:"p",href:"https://docs.scala-lang.org/overviews/core/futures.html"},"Future"),",\nwhile streaming is based on the Observer pattern.\nIf you integrate ScalaPB with Armeria, you can leverage the followings:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Using both ",Object(n.b)("a",{parentName:"li",href:"https://armeria.dev/docs/server-docservice"},"gRPC server")," and\n",Object(n.b)("a",{parentName:"li",href:"https://armeria.dev/docs/client-grpc"},"gRPC client")," features such as gRPC-over-HTTP/1 and\n",Object(n.b)("a",{parentName:"li",href:"gRPC-Web"},"gRPC-Web")," protocol powered by Armeria"),Object(n.b)("li",{parentName:"ul"},"Browsing the list of available RPC operations and invoking a service operation via a web console"),Object(n.b)("li",{parentName:"ul"},"Converting either a Protocol Buffers or JSON to and from an\n",Object(n.b)("a",{parentName:"li",href:"https://scalapb.github.io/docs/generated-code"},"scalapb.GeneratedMessage")," in annotated service")),Object(n.b)("p",null,"First, you need the ",Object(n.b)("inlineCode",{parentName:"p"},"armeria-scalapb_2.12")," or ",Object(n.b)("inlineCode",{parentName:"p"},"armeria-scalapb_2.13")," dependency to use the above features:"),Object(n.b)(b,{language:"groovy",filename:"build.sbt",mdxType:"CodeBlock"},'\nlibraryDependencies += "com.linecorp.armeria" %% "armeria-scalapb" % "'+c["com.linecorp.armeria:armeria-bom"]+'"\n'),Object(n.b)(p,{mdxType:"Tip"},Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"armeria-scalapb")," is only available for Scala 2.12.x and 2.13.x.")),Object(n.b)("h2",{id:"running-a-grpc-service",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#running-a-grpc-service","aria-label":"running a grpc service permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Running a gRPC service"),Object(n.b)("p",null,"You need to register a ScalaPB gRPC stub to a ",Object(n.b)("a",{parentName:"p",href:"type://GrpcService:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/grpc/GrpcService.html"},"type://GrpcService")," using a ",Object(n.b)("a",{parentName:"p",href:"type://GrpcServiceBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/grpc/GrpcServiceBuilder.html"},"type://GrpcServiceBuilder"),"\nand add it to the ",Object(n.b)("a",{parentName:"p",href:"type://ServerBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/ServerBuilder.html"},"type://ServerBuilder"),":"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-scala"},'import com.linecorp.armeria.common.scalapb.ScalaPBJsonMarshaller\nimport com.linecorp.armeria.server.Server\nimport com.linecorp.armeria.server.docs.DocService\nimport com.linecorp.armeria.server.grpc.GrpcService\n\n// Creates GrpcService with your gRPC stub generated by ScalaPB.\nval grpcService =\n      GrpcService\n        .builder()\n        // Add your ScalaPB gRPC stub using `bindService()`\n        .addService(YourServiceGrpc.bindService(\n          new YourServiceImpl, ExecutionContext.global))\n        // Register `ScalaPBJsonMarshaller` for supporting gRPC JSON format.\n        .jsonMarshallerFactory(_ => ScalaPBJsonMarshaller())\n        .enableUnframedRequests(true)\n        .build()\n\n// Creates Armeria Server for ScalaPB gRPC stub.\nServer.builder()\n      .http(httpPort)\n      .https(httpsPort)\n      .service(grpcService)\n      // Add DocService for browsing the list of gRPC services and \n      // invoking a service operation from a web form.\n      // See https://armeria.dev/docs/server-docservice for more information.\n      .serviceUnder("/docs", new DocService())\n      .build()\n')),Object(n.b)("p",null,"Please see ",Object(n.b)("a",{parentName:"p",href:"https://armeria.dev/docs/server-grpc"},"gRPC service")," for more information."),Object(n.b)("h2",{id:"calling-a-grpc-service",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#calling-a-grpc-service","aria-label":"calling a grpc service permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Calling a gRPC service"),Object(n.b)("p",null,"You can also call a gRPC service using a ScalaPB gRPC client.\n",Object(n.b)("inlineCode",{parentName:"p"},"ScalaPbJsonMarshaller")," should be registered with ",Object(n.b)("a",{parentName:"p",href:"type://GrpcClientOptions#GRPC_JSON_MARSHALLER_FACTORY:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/grpc/GrpcClientOptions.html#GRPC_JSON_MARSHALLER_FACTORY"},"type://GrpcClientOptions#GRPC_JSON_MARSHALLER_FACTORY")," to\nsupport gRPC JSON serialization format."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-scala"},'import com.linecorp.armeria.client.Clients\nimport com.linecorp.armeria.client.grpc.GrpcClientOptions\nimport com.linecorp.armeria.common.scalapb.ScalaPbJsonMarshaller\n        \nval client = \n  Clients.builder("gproto+http://127.0.0.1:8080/")\n         // Register \'ScalaPBJsonMarshaller\' for enabling gRPC JSON serialization format\n         .option(GrpcClientOptions.GRPC_JSON_MARSHALLER_FACTORY\n                                  .newValue(_ => ScalaPbJsonMarshaller()))\n         .build(classOf[HelloServiceBlockingStub])\n    \nval request = HelloRequest("Armerian World")\nval reply = helloService.hello(request)\nassert(reply.message == "Hello, Armerian World!")\n')),Object(n.b)("p",null,"Please see ",Object(n.b)("a",{parentName:"p",href:"https://armeria.dev/docs/client-grpc"},"gRPC client")," for more information."),Object(n.b)("h2",{id:"supporting-scalapb-in-annotated-services",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#supporting-scalapb-in-annotated-services","aria-label":"supporting scalapb in annotated services permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Supporting ScalaPB in annotated services."),Object(n.b)("h3",{id:"converting-an-http-request-to-a-scalapbs-generatedmesage",style:{position:"relative"}},Object(n.b)("a",{parentName:"h3",href:"#converting-an-http-request-to-a-scalapbs-generatedmesage","aria-label":"converting an http request to a scalapbs generatedmesage permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Converting an HTTP request to a ScalaPB's ",Object(n.b)("inlineCode",{parentName:"h3"},"GeneratedMesage")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"A Protocol Buffers is automatically converted to a ",Object(n.b)("inlineCode",{parentName:"li"},"GeneratedMessage")," only when\nthe content type is one of followings:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"application/probuf")," "),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"application/octet-stream")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"application/x-protobuf")),Object(n.b)("li",{parentName:"ul"},"no media type negotiated"))),Object(n.b)("li",{parentName:"ul"},"A JSON is automatically converted to a ",Object(n.b)("inlineCode",{parentName:"li"},"GeneratedMessage")," only when the content type\nis either ",Object(n.b)("inlineCode",{parentName:"li"},"application/json")," or ends with ",Object(n.b)("inlineCode",{parentName:"li"},"+json"),".")),Object(n.b)("p",null,"If you have the following proto file,"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-protobuf"},'syntax = "proto3";\npackage com.example.testing;\noption java_package = "com.example.testing";\n\nmessage SimpleRequest {\n  string payload = 1;\n  int32 size = 2;\n}\n\nmessage SimpleResponse {\n  string message = 1;\n  int32 status = 2;\n}\n')),Object(n.b)("p",null,"the ",Object(n.b)("inlineCode",{parentName:"p"},"SimpleRequest")," generated by ScalaPB could be used for a parameter of your service method."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-scala"},'import com.example.testing.SimpleRequest\nimport com.linecorp.armeria.server.annotation.{ConsumesJson, ConsumesProtobuf, Post}\n\nclass GreetingService {\n  // If a content type is not set, Protoco Buffers\' parser is used by default.\n  @Post("/no-content-type")\n  def noContentType(request: SimpleRequest): String = s"Hello, ${request.payload}!"\n\n  // Convert the Protocol Buffers in an HTTP payload into the \'SimpleRequest\'\n  @Post("/protobuf")\n  @ConsumesProtobuf\n  def consumeProtobuf(request: SimpleRequest): String = s"Hello, ${request.payload}!"\n\n  // Convert the JSON in an HTTP payload into a \'SimpleRequest\'\n  @Post("/json")\n  @ConsumesJson\n  def consumeJson(request: SimpleRequest): String = "Hello, Armeria!"\n}\n')),Object(n.b)("h3",{id:"returning-a-scalapbs-generatedmesage",style:{position:"relative"}},Object(n.b)("a",{parentName:"h3",href:"#returning-a-scalapbs-generatedmesage","aria-label":"returning a scalapbs generatedmesage permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Returning a ScalaPB's ",Object(n.b)("inlineCode",{parentName:"h3"},"GeneratedMesage")),Object(n.b)("p",null,"A ",Object(n.b)("inlineCode",{parentName:"p"},"GeneratedMesage")," can be converted to either Protocol Buffers or JSON."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-scala"},'import com.example.testing.SimpleResponse\nimport scala.concurrent.Future\n\nclass GreetingService {\n\n  // Convert \'SimpleResponse\' into Protocol Buffers wire format\n  @Get("/protobuf")\n  @ProducesProtobuf\n  def produceProtobuf: SimpleResponse = SimpleResponse("Hello, Armeria!")\n\n  // Convert \'SimpleResponse\' into JSON format\n  @Get("/json")\n  @ProducesJson\n  def produceJson: SimpleResponse = SimpleResponse("Hello, Armeria!")\n\n  // Convert \'SimpleResponse\' into Protocol Buffers wire format with Scala Future\n  @Get("/protobuf+async")\n  @ProducesProtobuf\n  def produceProtobufFuture: Future[SimpleResponse] = \n    Future { SimpleResponse("Hello, Armeria!") }\n}\n')),Object(n.b)("p",null,"However, a sequence of ",Object(n.b)("inlineCode",{parentName:"p"},"GeneratedMesage"),"s can be only converted to JSON array because Protocol Buffers\nwire format is ",Object(n.b)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers/docs/techniques#streaming"},"not self-delimiting"),".\nThe following collection types can be converted to JSON array:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"scala.List")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"scala.Vector")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"scala.Set")),Object(n.b)("li",{parentName:"ul"},"Reactive Stream ",Object(n.b)("a",{parentName:"li",href:"https://www.reactive-streams.org/reactive-streams-1.0.2-javadoc/org/reactivestreams/Publisher.html"},"Publisher")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"java.util.List")," "),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"java.util.Set")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"java.util.stream.Stream"))),Object(n.b)("h3",{id:"injecting-an-executioncontext-to-an-annotated-service-method",style:{position:"relative"}},Object(n.b)("a",{parentName:"h3",href:"#injecting-an-executioncontext-to-an-annotated-service-method","aria-label":"injecting an executioncontext to an annotated service method permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Injecting an ",Object(n.b)("a",{parentName:"h3",href:"https://www.scala-lang.org/api/current/scala/concurrent/ExecutionContext.html"},"ExecutionContext")," to an annotated service method"),Object(n.b)("p",null,"An ",Object(n.b)("inlineCode",{parentName:"p"},"ExecutionContext")," could be automatically injected as a method parameter to execute an asynchronous service\non top of an Armeria's event loop or blocking task executor."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-scala"},'import com.linecorp.armeria.server.ServiceRequestContext\nimport com.linecorp.armeria.server.annoation.Blocking\nimport scala.concurrent.Future\n\nclass MyAsyncService {\n  @Post("/async")\n  def asyncService(req: SimpleRequest)(implicit ec: ExecutionContext): Future[String] =\n    Future {\n      // This callback will be executed in an Armeria\'s event loop\n      assert(ServiceRequestContext.current() != null)\n      "Hello, Armeria!"\n    }\n\n  @Blocking\n  @Post("/blocking-task")\n  def blockingAsyncService(req: SimpleRequest)(implicit ec: ExecutionContext): Future[String] =\n    Future {\n      // This callback will be executed in an Armeria\'s blocking task executor\n      assert(ServiceRequestContext.current() != null)\n      // Perform a long running task\n      "Hello, Armeria!"\n    }\n  }\n}\n')))}d.isMDXComponent=!0},xCMr:function(e,a,t){"use strict";var r=t("Wbzz"),n=t("q1tI"),i=t.n(n),c=t("/94A"),o=t("+ejy");a.a=function(e){var a=Object(r.useStaticQuery)("1217743243").allMdx.nodes;return i.a.createElement(o.a,Object.assign({},e,{candidateMdxNodes:a,index:c,prefix:"docs",pageTitleSuffix:"Armeria documentation"}))}}}]);
//# sourceMappingURL=component---src-pages-docs-advanced-scalapb-mdx-8e4786a997cac6fc0fb3.js.map
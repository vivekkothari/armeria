{"version":3,"sources":["webpack:///./src/layouts/redirect.tsx","webpack:///./src/layouts/short-url.tsx"],"names":["Redirect","props","useState","manualRedirect","setManualRedirect","setTimeout","title","httpEquiv","content","href","style","display","width","height","alignItems","justifyContent","Paragraph","ShortUrlRedirect","pageContext"],"mappings":"kKA4CeA,IAnC2B,SAACC,GAAU,MACPC,oBAAS,GAA9CC,EAD4C,KAC5BC,EAD4B,KAGnD,OADAC,YAAW,kBAAMD,GAAkB,KAAO,KAExC,oCACE,kBAAC,IAAD,CAAQE,MAAM,eACZ,0BAAMC,UAAU,UAAUC,QAAO,UAAYP,EAAMQ,OACnD,gEACqBR,EAAMQ,KAD3B,iBAIDN,EACC,yBACEO,MAAO,CACLC,QAAS,OACTC,MAAO,QACPC,OAAQ,QACRC,WAAY,SACZC,eAAgB,WAGlB,8BACE,sBAAYC,UAAZ,KACE,kBAAC,eAAD,CAAcP,KAAMR,EAAMQ,MAA1B,cADF,yBAOJ,M,kCCtCR,4CAYeQ,UAJ2C,SAAChB,GAAD,OACxD,kBAAC,IAAD,CAAUQ,KAAMR,EAAMiB,YAAYT","file":"component---src-layouts-short-url-tsx-1909ab8217afad9489ea.js","sourcesContent":["import { Typography } from 'antd';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\n\ninterface RedirectProps {\n  href: string;\n}\n\nconst Redirect: React.FC<RedirectProps> = (props) => {\n  const [manualRedirect, setManualRedirect] = useState(false);\n  setTimeout(() => setManualRedirect(true), 3000);\n  return (\n    <>\n      <Helmet title=\"Redirecting\">\n        <meta httpEquiv=\"refresh\" content={`0; url=${props.href}`} />\n        <script>{`\n        window.location = '${props.href}';\n        `}</script>\n      </Helmet>\n      {manualRedirect ? (\n        <div\n          style={{\n            display: 'flex',\n            width: '100vw',\n            height: '100vh',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <main>\n            <Typography.Paragraph>\n              <OutboundLink href={props.href}>Click here</OutboundLink> if not\n              redirected.\n            </Typography.Paragraph>\n          </main>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default Redirect;\n","import React from 'react';\n\nimport Redirect from './redirect';\n\ninterface ShortUrlRedirectProps {\n  pageContext: { href: string };\n}\n\nconst ShortUrlRedirect: React.FC<ShortUrlRedirectProps> = (props) => (\n  <Redirect href={props.pageContext.href} />\n);\n\nexport default ShortUrlRedirect;\n"],"sourceRoot":""}
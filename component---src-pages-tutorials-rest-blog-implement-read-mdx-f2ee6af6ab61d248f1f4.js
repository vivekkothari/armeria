(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{"+uWH":function(e,t,a){"use strict";a.r(t),a.d(t,"pageTitle",(function(){return i})),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return g}));var r=a("zLVn"),n=(a("q1tI"),a("7ljp")),o=a("FvYO"),i="Implementing READ operation",l={},c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(n.b)("div",t)}},s=c("TutorialSteps"),p=c("Warning"),b=c("Tabs"),m=c("TabPane"),d={pageTitle:i,_frontmatter:l},h=o.a;function g(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(n.b)(h,Object.assign({},d,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"implementing-read-operation",style:{position:"relative"}},Object(n.b)("a",{parentName:"h1",href:"#implementing-read-operation","aria-label":"implementing read operation permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Implementing READ operation"),Object(n.b)("h6",{className:"inlinePageToc",role:"navigation"},"Table of contents"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#what-you-need"},"What you need")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#1-map-http-method"},"1. Map HTTP method")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#2-handle-parameters"},"2. Handle parameters")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#3-implement-service-code"},"3. Implement service code")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#4-return-response"},"4. Return response")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#5-test-retrieving-a-blog-post"},"5. Test retrieving a blog post")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"#next-step"},"Next step"))),Object(n.b)("p",null,"In this step, we'll implement two methods at once. One is for retrieving a single post and another for multiple blog\nposts. By completing this step, you'll learn to map your service with the HTTP GET (",Object(n.b)("a",{parentName:"p",href:"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html"},"type://@Get"),") method, use parameter injection (",Object(n.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param"),"), set default parameter value (",Object(n.b)("a",{parentName:"p",href:"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html"},"type://@Default"),"), and return a JSON object (",Object(n.b)("a",{parentName:"p",href:"type://@ProducesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesJson.html"},"type://@ProducesJson"),") as a response."),Object(n.b)(s,{current:5,mdxType:"TutorialSteps"}),Object(n.b)("h2",{id:"what-you-need",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#what-you-need","aria-label":"what you need permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"What you need"),Object(n.b)("p",null,"You must have the following files ready for retrieving a blog post. You can always ",Object(n.b)("a",{parentName:"p",href:"https://github.com/line/armeria-examples/blob/master/tutorials/rest-api-annotated-service/src/main/java/example/armeria/server/blog/"},"download")," the full version, instead of creating one yourself."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Main.java from ",Object(n.b)("a",{parentName:"li",href:"/tutorials/rest/blog/create-server"},"Step 1. Create a server")),Object(n.b)("li",{parentName:"ul"},"BlogPost.java from ",Object(n.b)("a",{parentName:"li",href:"/tutorials/rest/blog/prepare-data-object"},"Step 2. Prepare a data object")),Object(n.b)("li",{parentName:"ul"},"BlogService.java from ",Object(n.b)("a",{parentName:"li",href:"/tutorials/rest/blog/add-services-to-server"},"Step 3. Add services to a server"))),Object(n.b)(p,{mdxType:"Warning"},Object(n.b)("p",null,"To test retrieving a blog post, you need to have blog posts created, which requires you to have the creation method\nimplemented in the BlogService.java. See ",Object(n.b)("a",{parentName:"p",href:"/tutorials/rest/blog/implement-create"},"Step 4. Implement CREATE")," for\ninstructions.")),Object(n.b)("h2",{id:"1-map-http-method",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#1-map-http-method","aria-label":"1 map http method permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"1. Map HTTP method"),Object(n.b)("p",null,"Let's start ",Object(n.b)("a",{parentName:"p",href:"/docs/server-annotated-service#mapping-http-service-methods"},"mapping the HTTP GET method")," with our service method:"),Object(n.b)(b,{mdxType:"Tabs"},Object(n.b)(m,{tab:"Single post",key:"1",mdxType:"TabPane"},Object(n.b)("p",null,"Map the HTTP GET method for retrieving a single post:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Declare a service method ",Object(n.b)("inlineCode",{parentName:"p"},"getBlogPost()")," in the class ",Object(n.b)("inlineCode",{parentName:"p"},"BlogService"),".")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Map this service method with the HTTP GET method by adding the ",Object(n.b)("a",{parentName:"p",href:"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html"},"type://@Get")," annotation as follows.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Bind the endpoint ",Object(n.b)("inlineCode",{parentName:"p"},"/blogs")," to the method."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=6",filename:"BlogService.java",highlight:"6"},'import com.linecorp.armeria.server.annotation.Get;\n\npublic final class BlogService {\n  ...\n\n  @Get("/blogs")\n  public void getBlogPost(int id) {\n    // Retrieve a single post\n  }\n}\n'))))),Object(n.b)(m,{tab:"Multiple posts",key:"2",mdxType:"TabPane"},Object(n.b)("p",null,"Map the HTTP GET method for retrieving multiple posts:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Declare a service method ",Object(n.b)("inlineCode",{parentName:"p"},"getBlogPosts()")," in the class ",Object(n.b)("inlineCode",{parentName:"p"},"BlogService"),".")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Map this service method with the HTTP GET method by adding the ",Object(n.b)("a",{parentName:"p",href:"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html"},"type://@Get")," annotation as follows.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Bind the endpoint ",Object(n.b)("inlineCode",{parentName:"p"},"/blogs")," to the method."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=6",filename:"BlogService.java",highlight:"6"},'import com.linecorp.armeria.server.annotation.Get;\n\npublic final class BlogService {\n  ...\n\n  @Get("/blogs")\n  public void getBlogPosts(boolean descending) {\n    // Retrieve multiple posts\n  }\n}\n')))))),Object(n.b)("h2",{id:"2-handle-parameters",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#2-handle-parameters","aria-label":"2 handle parameters permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"2. Handle parameters"),Object(n.b)("p",null,"Take in information through ",Object(n.b)("em",{parentName:"p"},"path")," and ",Object(n.b)("em",{parentName:"p"},"query")," parameters for retrieving blog posts. For retrieving a single post, we'll take a blog post ID as the path parameter. For multiple posts, we'll take the sorting order as a query parameter."),Object(n.b)(b,{defaultActiveKey:"1",mdxType:"Tabs"},Object(n.b)(m,{tab:"Single post",key:"1",mdxType:"TabPane"},Object(n.b)("p",null,"Let's handle parameters for retrieving a single post:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"To take in a path parameter, add ",Object(n.b)("inlineCode",{parentName:"li"},"/:id")," to the ",Object(n.b)("a",{parentName:"li",href:"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html"},"type://@Get")," annotation's parameter as in line 6."),Object(n.b)("li",{parentName:"ol"},Object(n.b)("a",{parentName:"li",href:"/docs/server-annotated-service#parameter-injection"},"Inject the path parameter")," to the service method, annotate the parameter with ",Object(n.b)("a",{parentName:"li",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," as in line 7.")),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java showlineno=true",filename:"BlogService.java",showlineno:"true"},'import com.linecorp.armeria.server.annotation.Param;\n\npublic final class BlogService {\n ...\n\n @Get("/blogs/:id")\n public void getBlogPost(@Param int id) {\n   // Retrieve a single post\n }\n}\n'))),Object(n.b)(m,{tab:"Multiple posts",key:"2",mdxType:"TabPane"},Object(n.b)("p",null,"Let's handle parameters for retrieving multiple posts:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Specify the endpoint for the service using the ",Object(n.b)("a",{parentName:"p",href:"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html"},"type://@Get")," annotation.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},Object(n.b)("a",{parentName:"p",href:"/docs/server-annotated-service#parameter-injection"},"Inject the parameter")," by annotating the parameter ",Object(n.b)("inlineCode",{parentName:"p"},"descending")," with ",Object(n.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param")," as in line 8.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Set the default sorting order to descending by annotating the parameter ",Object(n.b)("inlineCode",{parentName:"p"},"descending")," with ",Object(n.b)("a",{parentName:"p",href:"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html"},"type://@Default"),", with its parameter as ",Object(n.b)("inlineCode",{parentName:"p"},'"true"'),"."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java showlineno=true",filename:"BlogService.java",showlineno:"true"},'import com.linecorp.armeria.server.annotation.Param;\nimport com.linecorp.armeria.server.annotation.Default;\n\npublic final class BlogService {\n  ...\n\n  @Get("/blogs")\n  public void getBlogPosts(@Param @Default("true") boolean descending) {\n    // Retrieve multiple posts\n  }\n}\n')))))),Object(n.b)("h2",{id:"3-implement-service-code",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#3-implement-service-code","aria-label":"3 implement service code permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"3. Implement service code"),Object(n.b)("p",null,"In this step, write the code required for service itself."),Object(n.b)(b,{defaultActiveKey:"1",mdxType:"Tabs"},Object(n.b)(m,{tab:"Single post",key:"1",mdxType:"TabPane"},Object(n.b)("p",null,"To retrieve a single blog post information, copy the following code inside the ",Object(n.b)("inlineCode",{parentName:"p"},"getBlogPost()")," method."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=3",filename:"BlogService.java",highlight:"3"},'@Get("/blogs")\npublic void getBlogPost(@Param int id) {\n  BlogPost blogPost = blogPosts.get(id);\n}\n'))),Object(n.b)(m,{tab:"Multiple posts",key:"2",mdxType:"TabPane"},Object(n.b)("p",null,"To retrieve multiple blog posts, copy the following code inside the ",Object(n.b)("inlineCode",{parentName:"p"},"getBlogPosts()")," method. Note that the return type has been changed from ",Object(n.b)("inlineCode",{parentName:"p"},"void")," to ",Object(n.b)("inlineCode",{parentName:"p"},"Iterable<BlogPost>"),"."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java",filename:"BlogService.java"},'import java.util.Map.Entry;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.stream.Collectors;\n\n@Get("/blogs")\npublic Iterable<BlogPost> getBlogPosts(@Param @Default("true") boolean descending) {\n  // Descending\n  if (descending) {\n      return blogPosts.entrySet()\n                      .stream()\n                      .sorted(Collections.reverseOrder(Comparator.comparingInt(Entry::getKey)))\n                      .map(Entry::getValue).collect(Collectors.toList());\n  }\n  // Ascending\n  return blogPosts.values().stream().collect(Collectors.toList());\n}\n')))),Object(n.b)("h2",{id:"4-return-response",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#4-return-response","aria-label":"4 return response permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"4. Return response"),Object(n.b)("p",null,"Let's return a response for the service call."),Object(n.b)(b,{defaultActiveKey:"1",mdxType:"Tabs"},Object(n.b)(m,{tab:"Single post",key:"1",mdxType:"TabPane"},Object(n.b)("p",null,"To return a response for getting a single post:"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Replace the return type of the ",Object(n.b)("inlineCode",{parentName:"li"},"getBlogPost()")," method from ",Object(n.b)("inlineCode",{parentName:"li"},"void")," to ",Object(n.b)("a",{parentName:"li",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse"),"."),Object(n.b)("li",{parentName:"ol"},"Return a response using Armeria's ",Object(n.b)("a",{parentName:"li",href:"type://HttpResponse:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/common/HttpResponse.html"},"type://HttpResponse")," containing the content of the blog post retrieved.")),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=5,8",filename:"BlogService.java",highlight:"5,8"},'import com.linecorp.armeria.common.HttpResponse;\n\npublic final class BlogService {\n  @Get("/blogs/:id")\n  public HttpResponse getBlogPost(@Param int id) {\n    ...\n\n    return HttpResponse.ofJson(blogPost);\n  }\n}\n'))),Object(n.b)(m,{tab:"Multiple posts",key:"2",mdxType:"TabPane"},Object(n.b)("p",null,"We've already implemented returning multiple blog posts in the previous step. Here, annotate the method ",Object(n.b)("inlineCode",{parentName:"p"},"getBlogPosts()")," with ",Object(n.b)("a",{parentName:"p",href:"type://@ProducesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesJson.html"},"type://@ProducesJson"),". This converts a list of ",Object(n.b)("inlineCode",{parentName:"p"},"BlogPost")," objects into a JSON response."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-java",metastring:"filename=BlogService.java highlight=4",filename:"BlogService.java",highlight:"4"},'import com.linecorp.armeria.server.annotation.ProducesJson;\n\n@Get("/blogs")\n@ProducesJson\npublic Iterable<BlogPost> getBlogPosts(@Param @Default("true") boolean descending) {\n  // Retrieve multiple blog posts\n}\n')))),Object(n.b)("h2",{id:"5-test-retrieving-a-blog-post",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#5-test-retrieving-a-blog-post","aria-label":"5 test retrieving a blog post permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"5. Test retrieving a blog post"),Object(n.b)("p",null,"Let's test retrieving a single and multiple posts."),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Run the server like we did in ",Object(n.b)("a",{parentName:"p",href:"/tutorials/rest/blog/create-server"},"Step 1. Create a server")," by running the\n",Object(n.b)("inlineCode",{parentName:"p"},"main()"),' method or using Gradle. When you see the message, "Server has been started", you can try testing service methods.')),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Create a couple of blog posts to test retrieving a blog post and get the ID value returned. Enter the cURL commands below."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-bash"},'$ curl --request POST \'localhost:8080/blogs\' \\\n-H \'Content-Type: application/json\' \\\n-d \'{"title":"First post for testing", "content":"Test reading."}\'\n')),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-bash"},'$ curl --request POST \'localhost:8080/blogs\' \\\n-H \'Content-Type: application/json\' \\\n-d \'{"title":"Second post for testing", "content":"Test reading a post."}\'\n')),Object(n.b)("p",{parentName:"li"},"For each command, you'll get a response similar to the following."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-bash"},'{"id":0,"title":"First post for testing","content":"Test reading.","createdAt":...,"modifiedAt":...}\n\n{"id":1,"title":"Second post for testing","content":"Test reading a post.","createdAt":...,"modifiedAt":...}\n'))),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Try retrieving blog posts we just created:"),Object(n.b)(b,{defaultActiveKey:"1",mdxType:"Tabs"},Object(n.b)(m,{tab:"Single post",key:"1",mdxType:"TabPane"},Object(n.b)("p",{parentName:"li"},"Let's try retrieving the second blog post we created. Pass the path parameter (blog ID) as ",Object(n.b)("inlineCode",{parentName:"p"},"1"),"."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-bash"},"$ curl --request GET 'localhost:8080/blogs/1'\n")),Object(n.b)("p",{parentName:"li"},"You'll get a return value similar to this:"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-bash"},'{\n  "id":1,\n  "title":"Second post for testing",\n  "content":"Test reading a post.",\n  "createdAt":...,\n  "modifiedAt":...\n}\n'))),Object(n.b)(m,{tab:"Multiple posts",key:"2",mdxType:"TabPane"},Object(n.b)("p",{parentName:"li"},"Let's try retrieving all the blog posts we've created."),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-bash"},"$ curl --request GET 'localhost:8080/blogs'\n")),Object(n.b)("p",{parentName:"li"},"You'll get a return value similar to this:"),Object(n.b)("pre",{parentName:"li"},Object(n.b)("code",{parentName:"pre",className:"language-bash"},'[\n  {\n    "id":1,\n    "title":"Second post for testing",\n    "content":"Test reading a post.",\n    "createdAt":...,\n    "modifiedAt":...\n  },\n  {\n    "id":0,\n    "title":"First post for testing",\n    "content":"Test reading.",\n    "createdAt":...,\n    "modifiedAt":...\n  }\n]\n')))))),Object(n.b)("p",null,"You can test this also with Armeria's ",Object(n.b)("a",{parentName:"p",href:"/docs/server-docservice"},"Documentation service"),". See ",Object(n.b)("a",{parentName:"p",href:"/tutorials/rest/blog/add-services-to-server#using-docservice-after-adding-service-methods"},"Using DocService after adding service methods")," for instructions."),Object(n.b)("h2",{id:"next-step",style:{position:"relative"}},Object(n.b)("a",{parentName:"h2",href:"#next-step","aria-label":"next step permalink",className:"anchor before"},Object(n.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Next step"),Object(n.b)("p",null,"In this step, we've implemented methods for a READ operation and used Armeria's annotations; ",Object(n.b)("a",{parentName:"p",href:"type://@Get:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Get.html"},"type://@Get"),", ",Object(n.b)("a",{parentName:"p",href:"type://@ProducesJson:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/ProducesJson.html"},"type://@ProducesJson"),", ",Object(n.b)("a",{parentName:"p",href:"type://@Param:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Param.html"},"type://@Param"),", and ",Object(n.b)("a",{parentName:"p",href:"type://@Default:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/Default.html"},"type://@Default"),"."),Object(n.b)("p",null,"Next, at ",Object(n.b)("a",{parentName:"p",href:"/tutorials/rest/blog/implement-update"},"Step 6. Implement UPDATE"),", we'll implement an UPDATE operation to modify existing blog posts."),Object(n.b)(s,{current:5,mdxType:"TutorialSteps"}))}g.isMDXComponent=!0},FvYO:function(e,t,a){"use strict";var r=a("Wbzz"),n=a("q1tI"),o=a.n(n),i=a("HWmb"),l=a("+ejy");t.a=function(e){var t=Object(r.useStaticQuery)("3172452987").allMdx.nodes;return o.a.createElement(l.a,Object.assign({},e,{candidateMdxNodes:t,index:i,prefix:"tutorials",menuTitle:!0,pageTitleSuffix:"Armeria tutorial"}))}},HWmb:function(e){e.exports=JSON.parse('{"root":["index"],"Useful links":{"User manual":"/docs","API documentation":"https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/index.html","Release notes":"/release-notes"},"REST service":["rest/blog","rest/blog/create-server","rest/blog/prepare-data-object","rest/blog/add-services-to-server","rest/blog/implement-create","rest/blog/implement-read","rest/blog/implement-update","rest/blog/implement-delete"],"gRPC service":{"Coming soon":null},"Thrift service":{"Coming soon":null}}')}}]);
//# sourceMappingURL=component---src-pages-tutorials-rest-blog-implement-read-mdx-f2ee6af6ab61d248f1f4.js.map